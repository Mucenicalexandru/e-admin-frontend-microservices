[{"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/index.js":"1","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/App.js":"2","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/homepage/HomePage.js":"3","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/Register.js":"4","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/UserRegister.js":"5","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/cities.js":"6","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/ProviderRegister.js":"7","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/departments.js":"8","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/Login.js":"9","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/context/UserContext.js":"10","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/Navbar.js":"11","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/AdminNavbar.js":"12","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/AuthenticationButton.js":"13","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/Logout.js":"14","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/LoginButton.js":"15","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/UserNavbar.js":"16","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/Groups.js":"17","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/AddGroup.js":"18","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buttons/SaveButton.js":"19","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buttons/CancelButton.js":"20","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/GroupInfo.js":"21","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/EditGroup.js":"22","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buildings/AddBuilding.js":"23","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buildings/SeeBuildings.js":"24","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddAdministrator.js":"25","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditAdministrator.js":"26","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddCensor.js":"27","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditPresident.js":"28","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddPresident.js":"29","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditCensor.js":"30","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/AdminUserStatistics.js":"31","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeUsers.js":"32","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeAdministrators.js":"33","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeCensors.js":"34","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeePresidents.js":"35","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/AdministratorNavbar.js":"36","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-access/PendingButton.js":"37","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/google-maps/Maps.js":"38","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/properties.js":"39","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/RegisterLink.js":"40","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-access/PendingRequestsList.js":"41","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/PresidentNavbar.js":"42","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/SeeTickets.js":"43","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/AddNewTicket.js":"44","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/AddPoll.js":"45","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/Results.js":"46","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/SeePolls.js":"47","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/TicketsAdministratorView.js":"48","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/service.providers/ListOfServiceProviders.js":"49","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/ProviderListNavbarComponent.js":"50","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/ServiceProviderNavbar.js":"51","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets.provider.view/SeePendingTickets.js":"52","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/offers/OfferDetails.js":"53","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/SeeAssignedServiceOfferDetails.js":"54","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/AverageStarRating.js":"55","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/service.providers/ReviewDetails.js":"56","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/StarRating.js":"57","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/MyBuilding.js":"58","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/Polls.js":"59","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/Vote.js":"60"},{"size":199,"mtime":1614755354637,"results":"61","hashOfConfig":"62"},{"size":4603,"mtime":1616592027913,"results":"63","hashOfConfig":"62"},{"size":165,"mtime":1614755801412,"results":"64","hashOfConfig":"62"},{"size":1870,"mtime":1614760869206,"results":"65","hashOfConfig":"62"},{"size":10621,"mtime":1614841306614,"results":"66","hashOfConfig":"62"},{"size":692,"mtime":1612433903989,"results":"67","hashOfConfig":"62"},{"size":7895,"mtime":1614761215173,"results":"68","hashOfConfig":"62"},{"size":668,"mtime":1613727438011,"results":"69","hashOfConfig":"62"},{"size":3354,"mtime":1614765543497,"results":"70","hashOfConfig":"62"},{"size":851,"mtime":1613555044126,"results":"71","hashOfConfig":"62"},{"size":1523,"mtime":1614927071871,"results":"72","hashOfConfig":"62"},{"size":455,"mtime":1614765912096,"results":"73","hashOfConfig":"62"},{"size":367,"mtime":1614766087394,"results":"74","hashOfConfig":"62"},{"size":491,"mtime":1615549413156,"results":"75","hashOfConfig":"62"},{"size":351,"mtime":1614766087382,"results":"76","hashOfConfig":"62"},{"size":1978,"mtime":1614857482401,"results":"77","hashOfConfig":"62"},{"size":6877,"mtime":1614768297380,"results":"78","hashOfConfig":"62"},{"size":4823,"mtime":1614767156085,"results":"79","hashOfConfig":"62"},{"size":225,"mtime":1613376635542,"results":"80","hashOfConfig":"62"},{"size":197,"mtime":1613377080344,"results":"81","hashOfConfig":"62"},{"size":6364,"mtime":1614847312579,"results":"82","hashOfConfig":"62"},{"size":3048,"mtime":1614768297348,"results":"83","hashOfConfig":"62"},{"size":3740,"mtime":1615470832522,"results":"84","hashOfConfig":"62"},{"size":9226,"mtime":1614847613319,"results":"85","hashOfConfig":"62"},{"size":2819,"mtime":1615470969995,"results":"86","hashOfConfig":"62"},{"size":3594,"mtime":1614847351971,"results":"87","hashOfConfig":"62"},{"size":2721,"mtime":1614771868901,"results":"88","hashOfConfig":"62"},{"size":3440,"mtime":1614847668644,"results":"89","hashOfConfig":"62"},{"size":3352,"mtime":1614778757676,"results":"90","hashOfConfig":"62"},{"size":3419,"mtime":1614847351959,"results":"91","hashOfConfig":"62"},{"size":2037,"mtime":1614926459846,"results":"92","hashOfConfig":"62"},{"size":5744,"mtime":1614772754545,"results":"93","hashOfConfig":"62"},{"size":3510,"mtime":1614847192713,"results":"94","hashOfConfig":"62"},{"size":3444,"mtime":1614847415100,"results":"95","hashOfConfig":"62"},{"size":3520,"mtime":1614772754553,"results":"96","hashOfConfig":"62"},{"size":1426,"mtime":1615549369224,"results":"97","hashOfConfig":"62"},{"size":1000,"mtime":1614857714184,"results":"98","hashOfConfig":"62"},{"size":1901,"mtime":1616575291014,"results":"99","hashOfConfig":"62"},{"size":88,"mtime":1613727437999,"results":"100","hashOfConfig":"62"},{"size":312,"mtime":1614848494042,"results":"101","hashOfConfig":"62"},{"size":6625,"mtime":1614849989898,"results":"102","hashOfConfig":"62"},{"size":965,"mtime":1614857605461,"results":"103","hashOfConfig":"62"},{"size":7762,"mtime":1615548439304,"results":"104","hashOfConfig":"62"},{"size":4589,"mtime":1615549234283,"results":"105","hashOfConfig":"62"},{"size":4354,"mtime":1616583390573,"results":"106","hashOfConfig":"62"},{"size":2233,"mtime":1616594815695,"results":"107","hashOfConfig":"62"},{"size":7646,"mtime":1616594815703,"results":"108","hashOfConfig":"62"},{"size":21627,"mtime":1616580237458,"results":"109","hashOfConfig":"62"},{"size":12884,"mtime":1616582923832,"results":"110","hashOfConfig":"62"},{"size":377,"mtime":1614926773802,"results":"111","hashOfConfig":"62"},{"size":827,"mtime":1614927157863,"results":"112","hashOfConfig":"62"},{"size":7274,"mtime":1616575332991,"results":"113","hashOfConfig":"62"},{"size":6321,"mtime":1614937978026,"results":"114","hashOfConfig":"62"},{"size":3629,"mtime":1615557290757,"results":"115","hashOfConfig":"62"},{"size":356,"mtime":1615556783737,"results":"116","hashOfConfig":"62"},{"size":4892,"mtime":1616582470442,"results":"117","hashOfConfig":"62"},{"size":337,"mtime":1616578288000,"results":"118","hashOfConfig":"62"},{"size":2620,"mtime":1616588945455,"results":"119","hashOfConfig":"62"},{"size":4317,"mtime":1616591886159,"results":"120","hashOfConfig":"62"},{"size":6394,"mtime":1616593757633,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"qdf31z",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/index.js",[],["261","262"],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/App.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/homepage/HomePage.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/Register.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/UserRegister.js",["263"],"import React, {useEffect, useState} from 'react';\nimport {cities} from \"../util/cities\";\nimport {Redirect} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction UserRegister(props) {\n\n    const [successfullyRegistered, setSuccessfullyRegistered] = useState(false);\n    const [emailExist, setEmailExist] = useState(false);\n    const [userToAdd, setUserToAdd] = useState({\n        firstName : \"\",\n        lastName : \"\",\n        phone : \"\",\n        email : \"\",\n        buildingStreet : \"\",\n        buildingNumber : \"\",\n        buildingName : \"\",\n        buildingEntrance : \"\",\n        town : \"\",\n        country : \"\",\n        other : \"\",\n        password : \"\",\n        buildingId : \"\",\n        groupId : \"\"\n    });\n\n    const [groupId, setGroupId] = useState(\"\");\n    const [buildingId, setBuildingId] = useState(\"\");\n    const [groupList, setGroupList] = useState([]);\n    const [buildingList, setBuildingList] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleTownChange = (e) => {\n        const s = {...userToAdd};\n        s.town = e.target.value;\n        setUserToAdd(s);\n    }\n\n    const handleCountryChange = (e) => {\n        const s = {...userToAdd};\n        s.country = e.target.value;\n        setUserToAdd(s);\n    }\n\n    const handleGroupChange = (e) => {\n        setGroupId(e.target.value);\n        const s = {...userToAdd};\n        s.groupId = e.target.value;\n        setUserToAdd(s);\n    }\n\n    const handleBuildingChange = (e) => {\n        setBuildingId(e.target.value);\n        const s = {...userToAdd};\n        s.buildingId = e.target.value;\n        setUserToAdd(s);\n    }\n\n    useEffect(() => {\n        axios.get(`/group/get-all`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setGroupList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n    useEffect(() =>{\n        axios.get(`/building/by-groupId/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setBuildingList(response.data);\n            })\n    }, [groupId])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post(`/user/`, userToAdd, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then((response) => {\n                if(response.status === 201){\n                    setSuccessfullyRegistered(true)\n                }\n            })\n            .catch((err) => {\n                if(err.response.status === 409){\n                    setEmailExist(true);\n                }else{\n                    console.log(err)\n                }\n            })\n    }\n\n    return (\n        <div>\n            {emailExist && (\n                <div  className={\"d-flex justify-content-center\"}>\n                    <div className={\"wrong-credentials\"}>\n                        <p style={{ margin: 'auto' }}>Email already in use</p>\n                    </div>\n                </div>\n            )}\n            <div className=\"d-flex justify-content-center\">\n                {successfullyRegistered && <Redirect to={{\n                    pathname : \"/login\"\n                }} />}\n\n                <form action=\"\" onSubmit={handleSubmit}>\n                    <h1>User</h1>\n{/*USER COUNTRY*/}\n                    <div>\n                        <select className=\"custom-select\" id=\"inputGroupSelect01\" onChange={handleCountryChange} required>\n                            <option value=\"\" selected>Choose country...</option>\n                            <option  value={\"Romania\"}>Romania</option>\n                        </select>\n                    </div>\n{/*USER TOWN*/}\n                    <div>\n                        <select className=\"custom-select margin-top-15\" id=\"inputGroupSelect01\" onChange={handleTownChange} required>\n                            <option value=\"\" selected>Choose town...</option>\n                            {cities.sort().map((city, index) => {\n                                return <option key={index} value={city}>{city}</option>\n                            })}\n                        </select>\n                    </div>\n                    {/*TODO set group and building required*/}\n{/*/!*SELECT GROUP*!/*/}\n                    <div className=\"input-group mb-3\">\n                        <select className=\"custom-select margin-top-15\" id=\"inputGroupSelect01\"  onChange={handleGroupChange}>\n                            <option value=\"\" selected>Select group...</option>\n                            {groupList.map((group, index) => {\n                                return <option key={index} value={group.groupId}>{group.shortName}</option>\n                            })}\n                        </select>\n                    </div>\n{/*/!*SELECT BUILDING*!/*/}\n                    <div className=\"input-group mb-3\">\n                        <select className=\"custom-select\" id=\"inputGroupSelect01\"  onChange={handleBuildingChange}>\n                            <option value=\"\" selected>Select building...</option>\n                            {buildingList && buildingList.map((building, index) => {\n                                return <option key={index} value={building.buildingId}>{building.street + \", \" + building.number}</option>\n                            })}\n                        </select>\n                    </div>\n{/*USER FIRST NAME*/}\n                    <div>\n                        <input type=\"text\" name=\"firstName\" value={userToAdd.firstName} required placeholder=\"First Name\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.firstName = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER LAST NAME*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"lastName\" value={userToAdd.lastName} required placeholder=\"Last Name\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.lastName = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER PHONE*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"phone\" value={userToAdd.phone} required  placeholder=\"Phone number\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.phone = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER STREET*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"street\" value={userToAdd.buildingStreet} required placeholder=\"Street\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.buildingStreet = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER STREET NUMBER*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"number\" value={userToAdd.buildingNumber} required placeholder=\"Number\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.buildingNumber = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER BUILDING NAME*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"buildingName\" value={userToAdd.buildingName} placeholder=\"Building name\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.buildingName = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER BUILDING ENTRANCE*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"buildingEntrance\"  value={userToAdd.buildingEntrance} placeholder=\"Building entrance\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.buildingEntrance = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER OTHER INFO*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"other\" value={userToAdd.other} placeholder=\"Other\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.other = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER EMAIL*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"email\" value={userToAdd.email} required  placeholder=\"Email\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.email = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER PASSWORD*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"password\" name=\"email\" value={userToAdd.password} required  placeholder=\"Password\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.password = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-outline-secondary float-right margin-top-25\">Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default UserRegister;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/cities.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/ProviderRegister.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/departments.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/Login.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/context/UserContext.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/Navbar.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/AdminNavbar.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/AuthenticationButton.js",["264"],"import React, {useContext} from 'react';\nimport Logout from \"./Logout\";\nimport Login from \"./Login\";\nimport {UserContext} from \"../context/UserContext\";\nimport LoginButton from \"./LoginButton\";\n\n\nconst AuthenticationButton = () => {\n\n    const value = useContext(UserContext);\n\n    return value ? <Logout /> : <LoginButton />;\n};\n\nexport default AuthenticationButton;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/Logout.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/LoginButton.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/UserNavbar.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/Groups.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/AddGroup.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buttons/SaveButton.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buttons/CancelButton.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/GroupInfo.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/EditGroup.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buildings/AddBuilding.js",["265"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport SaveButton from \"../buttons/SaveButton\";\n\nfunction AddBuilding(props) {\n    let groupId = props.location.groupId;\n\n    const [group, setGroup] = useState({});\n    const [redirect, setRedirect] = useState(false);\n    const [building, setBuilding] = useState({\n        street : \"\",\n        number : \"\",\n        town : \"\",\n        country : \"\",\n        buildingName : \"\",\n        entrance : \"\",\n        groupId : \"\"\n    })\n\n    useEffect(() =>{\n        axios.get(`/group/get-by-id/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                const s = {...building};\n                s.town = response.data.town;\n                s.country = response.data.country;\n                s.groupId = groupId;\n                setBuilding(s);\n                setGroup(response.data);\n            })\n    }, [building, groupId])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post(`/building/add`, building, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            })\n    }\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\" >Add Building</h1>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                {redirect && <Redirect to={{\n                    pathname : \"/see-buildings\",\n                    groupId : groupId\n                }} />}\n                <form onSubmit={handleSubmit}>\n\n                    <div>\n                        <input type=\"text\" name=\"street\" value={building.street} onChange={e => {\n                            const s = {...building};\n                            s.street = e.target.value;\n                            setBuilding(s);\n                        }} required placeholder=\"Street\"/>\n                    </div>\n                    <div>\n\n                        <input className={\"margin-top-25\"} type=\"text\" name=\"number\" value={building.number} onChange={e => {\n                            const s = {...building};\n                            s.number = e.target.value;\n                            setBuilding(s);\n                        }} required placeholder=\"Number\"/>\n                    </div>\n                    <div>\n                        <input  className={\"margin-top-25\"} type=\"text\" name=\"buildingName\" value={building.buildingName} onChange={e => {\n                            const s = {...building};\n                            s.buildingName = e.target.value;\n                            setBuilding(s);\n                        }} placeholder=\"Building Name\"/>\n                    </div>\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\" name=\"buildingEntrance\" value={building.entrance} onChange={e => {\n                            const s = {...building};\n                            s.entrance = e.target.value;\n                            setBuilding(s);\n                        }} placeholder=\"Building Entrance\"\n                        />\n                    </div>\n\n                    <Link to={{\n                        pathname : '/group',\n                        groupId : groupId}}>\n                        <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                    </Link>\n                    <SaveButton name={\"Add\"}/>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default AddBuilding;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buildings/SeeBuildings.js",["266"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction SeeBuildings(props) {\n\n    let groupId = props.location.groupId;\n    const value = useContext(UserContext);\n    const [buildingList, setBuildingsList] = useState([]);\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        axios.get(`/building/buildings-and-presidents/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setBuildingsList(response.data);\n                console.log(response.data)\n            })\n    }, [groupId, redirect])\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\">Number of buildings : {buildingList && buildingList.length}</h1>\n            <div className=\"d-flex justify-content-center\">\n                <i className=\"fas fa-square\" style={{\"color\" : \"#d2c6e2\"}}> <span style={{\"color\": \"black\"}}> My buildings </span> </i>\n            </div><br/>\n            <div className=\"d-flex justify-content-center\">\n                <i className=\"fas fa-square\" style={{\"color\" : \"#c6e2de\"}}> <span style={{\"color\": \"black\"}}> Group buildings</span></i>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25 margin-bottom-25\">\n                <Link to={{\n                    pathname : '/group',\n                    groupId : groupId}}>\n                    <button className=\"btn btn-outline-dark\">Back to group</button>\n                </Link>\n            </div>\n\n            {buildingList && buildingList.map((building, index) => {\n                if(value.buildingId === building.building.buildingId){\n                    return <div className=\"card mx-auto margin-top-25 my-card shadow\" key={index}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Building {index+1}</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{building.building.street} {building.building.number}</h6>\n                            <div className={\"margin-top-25 margin-bottom-25\"}>\n                                <p className=\"card-text\">Building name : {building.building.buildingName}</p>\n                                <p className=\"card-text\">Building entrance : {building.building.entrance}</p>\n                                <p>President : {building.president === null ? \"No president\" : building.president.lastName + \" \" + building.president.firstName}</p>\n                                <p><i className=\"fas fa-envelope\"> </i> {building.president === null ? \"No email\" : building.president.email}</p>\n\n                            </div>\n                            {value && value.roles.includes(\"ADMIN\") ?\n\n\n                                building.president ?\n                                    <Link to={{\n                                        pathname: 'edit-president',\n                                        groupId: groupId,\n                                        presidentId: building.president.userId,\n                                        buildingId: building.building.buildingId,\n                                        presidentFirstName : building.president.firstName,\n                                        presidentLastName : building.president.lastName,\n                                        presidentPhone : building.president.phone\n                                    }}>\n                                        <button\n                                            className=\"btn btn-outline-secondary margin-right-10 margin-left-10\">Edit\n                                            President\n                                        </button>\n                                    </Link>\n                                    :\n                                    <Link to={{\n                                        pathname: 'add-president',\n                                        groupId: groupId,\n                                        buildingId: building.building.buildingId\n                                    }}>\n                                        <button className=\"btn btn-outline-secondary margin-right-10 margin-left-10\">Add\n                                            President\n                                        </button>\n                                    </Link>\n                                :\n                                null\n                            }\n\n                            {value && value.roles.includes(\"ADMIN\") &&\n                            <button className=\"btn btn-outline-danger float-right\" onClick={() => {\n                                axios.delete(`/api/delete-building/${building.building.buildingId}`, {\n                                    headers: {\n                                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                                    }\n                                })\n                                    .then(() => {\n                                        setRedirect(!redirect);\n                                    })\n                                    .catch((err) => {\n                                        console.log(err);\n                                    })\n                            }}>Remove</button>\n                            }\n                        </div>\n\n                    </div>\n                }else{\n                    return <div className=\"card mx-auto margin-top-25 card shadow\" key={index}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Building {index+1}</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{building.building.street} {building.building.number}</h6>\n                            <div className={\"margin-top-25 margin-bottom-25\"}>\n                                <p className=\"card-text\">Building name : {building.building.buildingName}</p>\n                                <p className=\"card-text\">Building entrance : {building.building.entrance}</p>\n                                <p>President : {building.president === null ? \"No president\" : building.president.lastName + \" \" + building.president.firstName}</p>\n                                <p><i className=\"fas fa-envelope\"> </i> {building.president === null ? \"No email\" : building.president.email}</p>\n\n                            </div>\n                            {value && value.roles.includes(\"ADMIN\") ?\n\n\n                                building.president ?\n                                    <Link to={{\n                                        pathname: 'edit-president',\n                                        groupId: groupId,\n                                        linkFromBuilding : true,\n                                        userId: building.president.userId,\n                                        presidentFirstName : building.president.firstName,\n                                        presidentLastName : building.president.lastName,\n                                        presidentPhone : building.president.phone\n                                    }}>\n                                        <button\n                                            className=\"btn btn-outline-secondary margin-right-10 margin-left-10\">Edit\n                                            President\n                                        </button>\n                                    </Link>\n                                    :\n                                    <Link to={{\n                                        pathname: 'add-president',\n                                        groupId: groupId,\n                                        buildingId: building.building.buildingId\n                                    }}>\n                                        <button className=\"btn btn-outline-secondary margin-right-10 margin-left-10\">Add\n                                            President\n                                        </button>\n                                    </Link>\n                                :\n                                null\n                            }\n\n                            {value && value.roles.includes(\"ADMIN\") &&\n                            <button className=\"btn btn-outline-danger float-right\" onClick={() => {\n                                axios.delete(`/api/delete-building/${building.building.buildingId}`, {\n                                    headers: {\n                                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                                    }\n                                })\n                                    .then(() => {\n                                        setRedirect(!redirect);\n                                    })\n                            }}>Remove</button>\n                            }\n                        </div>\n\n                    </div>\n                }\n\n            })}\n\n        </>\n    )\n\n}\n\nexport default SeeBuildings;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddAdministrator.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditAdministrator.js",["267"],"import React, {useEffect, useState} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport SaveButton from \"../buttons/SaveButton\";\nimport axios from \"axios\";\n\n\nfunction EditAdministrator(props) {\n\n    let groupId = props.location.groupId;\n    let linkFromGroup = props.location.linkFromGroup;\n\n    let userId = props.location.userId;\n    let administratorFirstName = props.location.administratorFirstName;\n    let administratorLastName = props.location.administratorLastName;\n    let administratorPhone = props.location.administratorPhone;\n\n\n    const [redirect, setRedirect] = useState(false);\n\n    const [administrator, setAdministrator] = useState({\n        firstName : administratorFirstName,\n        lastName : administratorLastName,\n        phone : administratorPhone\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.put(`/user/edit/${userId}`, administrator, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            })\n    }\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\" >Edit Administrator</h1>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                {redirect && <Redirect to={{\n                    pathname : \"/group\",\n                    groupId : groupId\n                }} />}\n                <form action=\"\" onSubmit={handleSubmit}>\n{/*ADMINISTRATOR FIRST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\" value={administrator.firstName} name=\"firstName\"\n                               onChange={(e) => {\n                                   const s = {...administrator}\n                                   s.firstName = e.target.value;\n                                   setAdministrator(s);\n                               }}\n                        required/>\n                    </div>\n{/*ADMINISTRATOR LAST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  value={administrator.lastName} name=\"lastName\"  onChange={e => {\n                            const s = {...administrator};\n                            s.lastName = e.target.value;\n                            setAdministrator(s);\n                        }} required />\n                    </div>\n\n{/*ADMINISTRATOR PHONE*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  value={administrator.phone} name=\"phone\"  onChange={e => {\n                            const s = {...administrator};\n                            s.phone = e.target.value;\n                            setAdministrator(s);\n                        }} required />\n                    </div>\n\n                    {linkFromGroup ?\n                    <Link to={{\n                        pathname : '/group',\n                        groupId : groupId}}>\n                        <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                    </Link>\n                        :\n                        <Link to={{\n                            pathname : '/users-statistics'\n                            }}>\n                            <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                        </Link>\n                    }\n\n                    <SaveButton name={\"Update\"}/>\n\n                </form>\n\n            </div>\n        </>\n    );\n}\n\nexport default EditAdministrator;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddCensor.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditPresident.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddPresident.js",["268"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport SaveButton from \"../buttons/SaveButton\";\n\nfunction AddPresident(props) {\n\n    let groupId = props.location.groupId;\n    let buildingId =  props.location.buildingId;\n    const [redirect, setRedirect] = useState(false);\n\n    const [president, setPresident] = useState({\n        firstName : \"\",\n        lastName : \"\",\n        phone : \"\",\n        email : \"\",\n        buildingId : \"\",\n        groupId : \"\"\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        axios.post(`/user/add-president`, president, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            });\n\n    }\n\n    return (\n        <div>\n            <h1 className=\"d-flex justify-content-center\" >Add President</h1>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                {redirect && <Redirect to={{\n                    pathname : \"/see-buildings\",\n                    groupId : groupId\n                }} />}\n\n                <form action=\"\" onSubmit={handleSubmit}>\n{/*PRESIDENT FIRST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  name=\"firstName\"  onChange={e => {\n                            const s = {...president};\n                            s.firstName = e.target.value;\n                            s.buildingId = buildingId;\n                            s.groupId = groupId;\n                            setPresident(s);\n                        }} required placeholder=\"First Name\"/>\n                    </div>\n{/*PRESIDENT LAST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  name=\"lastName\"  onChange={e => {\n                            const s = {...president};\n                            s.lastName = e.target.value;\n                            setPresident(s);\n                        }} required placeholder=\"Last Name\"/>\n                    </div>\n\n{/*PRESIDENT PHONE*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\" name=\"phone\"  onChange={e => {\n                            const s = {...president};\n                            s.phone = e.target.value;\n                            setPresident(s);\n                        }} required placeholder=\"Phone\"/>\n                    </div>\n\n{/*PRESIDENT EMAIL*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  name=\"email\"  onChange={e => {\n                            const s = {...president};\n                            s.email = e.target.value;\n                            setPresident(s);\n                        }} required placeholder=\"Email\"/>\n                    </div>\n\n                    <Link to={{\n                        pathname : '/see-buildings',\n                        groupId : groupId}}>\n                        <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                    </Link>\n\n                    <SaveButton name={\"Add\"}/>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default AddPresident;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditCensor.js",["269"],"import React, {useEffect, useState} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport SaveButton from \"../buttons/SaveButton\";\nimport axios from \"axios\";\n\nfunction EditCensor(props) {\n\n    let groupId = props.location.groupId;\n    let linkFromGroup = props.location.linkFromGroup;\n\n    let userId = props.location.userId;\n    let censorFirstName = props.location.censorFirstName;\n    let censorLastName = props.location.censorLastName;\n    let censorPhone = props.location.censorPhone;\n\n    const [redirect, setRedirect] = useState(false);\n\n    const [censor, setCensor] = useState({\n        firstName : censorFirstName,\n        lastName : censorLastName,\n        phone : censorPhone\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.put(`/user/edit/${userId}`, censor, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            })\n    }\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\" >Edit Censor</h1>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                {redirect && <Redirect to={{\n                    pathname : \"/group\",\n                    groupId : groupId\n                }} />}\n                <form action=\"\" onSubmit={handleSubmit}>\n{/*ADMINISTRATOR FIRST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\" value={censor.firstName} name=\"firstName\"\n                               onChange={(e) => {\n                                   const s = {...censor}\n                                   s.firstName = e.target.value;\n                                   setCensor(s);\n                               }}\n                               required/>\n                    </div>\n{/*ADMINISTRATOR LAST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  value={censor.lastName} name=\"lastName\"  onChange={e => {\n                            const s = {...censor};\n                            s.lastName = e.target.value;\n                            setCensor(s);\n                        }} required />\n                    </div>\n\n{/*ADMINISTRATOR PHONE*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  value={censor.phone} name=\"phone\"  onChange={e => {\n                            const s = {...censor};\n                            s.phone = e.target.value;\n                            setCensor(s);\n                        }} required />\n                    </div>\n\n                    {linkFromGroup ?\n                        <Link to={{\n                            pathname : '/group',\n                            groupId : groupId}}>\n                            <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                        </Link>\n                    :\n                        <Link to={{\n                            pathname : '/users-statistics'}}>\n                            <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                        </Link>\n                    }\n\n\n                    <SaveButton name={\"Update\"}/>\n\n                </form>\n\n            </div>\n        </>\n    );\n}\n\nexport default EditCensor;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/AdminUserStatistics.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeUsers.js",["270","271","272","273","274","275"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {cities} from \"../util/cities\";\n\nfunction SeeUsers(props) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [userList, setUserList] = useState([]);\n    const [townDropdownHidden, setTownDropdownHidden] = useState(true);\n\n    useEffect(() => {\n        axios.get(`/user/all-by-role/USER`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setUserList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n    const handleTownChange = (e) => {\n        axios.get(`/user/all-by-town/${e.target.value}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setUserList(response.data)\n            })\n    }\n\n    const resetSearch = (e) => {\n        e.preventDefault();\n        axios.get(`/user/all`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setUserList(response.data);\n            })\n    }\n\n    return (\n        <div>\n            <h1 className=\"d-flex justify-content-center\">Users</h1>\n\n            <div className=\"d-flex justify-content-center\">\n                <button type=\"button\" className=\"btn btn-outline-info\" onClick={(e) => {\n                    e.preventDefault();\n                    setTownDropdownHidden(!townDropdownHidden);\n                }}>Advanced Search</button>\n            </div>\n\n            <div className=\"d-flex justify-content-center\">\n                <div style={{\"width\" : \"200px\"}} hidden={townDropdownHidden}>\n                    <select className=\"custom-select margin-top-25\" id=\"inputGroupSelect01\" onChange={handleTownChange} required>\n                        <option value=\"\" selected>Choose town...</option>\n                        {cities.sort().map((city, index) => {\n                            return <option key={index} value={city}>{city}</option>\n                        })}\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <button type=\"button\" className=\"btn btn-outline-info btn-sm\" hidden={townDropdownHidden} onClick={(e) => {\n                    e.preventDefault();\n                    setTownDropdownHidden(!townDropdownHidden);\n                    resetSearch(e);\n                }}>Reset search</button>\n            </div>\n\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <table>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Street</th>\n                        <th scope=\"col\">Number</th>\n                        <th scope=\"col\">Building name</th>\n                        <th scope=\"col\">Building Entrance</th>\n                        <th scope=\"col\">Town</th>\n                        <th scope=\"col\">Country</th>\n                        <th scope=\"col\">Roles</th>\n                        <th scope=\"col\">Remove</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n            {userList.map((user, index) => {\n                if(user.roles.length === 1){\n                    return <tr key={index}>\n                        <td>{user.userId}</td>\n                        <td>{user.firstName}</td>\n                        <td>{user.lastName}</td>\n                        <td>{user.phone}</td>\n                        <td>{user.email}</td>\n                        <td>{user.buildingStreet}</td>\n                        <td>{user.buildingNumber}</td>\n                        <td>{user.buildingName}</td>\n                        <td>{user.buildingEntrance}</td>\n                        <td>{user.town}</td>\n                        <td>{user.country}</td>\n                        <td>{user.roles}</td>\n                        {!user.roles.includes(\"ADMIN\") ?\n                            <td><button type=\"button\" className=\"btn  btn-outline-danger btn-sm\">Remove</button></td>\n                            :\n                            null\n                        }\n                    </tr>\n                }\n            })}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination\">\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n                        <li className=\"page-item active\">\n                            <a className=\"page-link\" href=\"#\">2 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default SeeUsers;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeAdministrators.js",["276","277","278","279","280"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction SeeAdministrators(props) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [administratorsList, setAdministratorsList] = useState([]);\n\n    useEffect(() => {\n        axios.get(`/user/all-by-role/ADMINISTRATOR`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setAdministratorsList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n\n    return (\n        <div>\n\n            <h1 className=\"d-flex justify-content-center\">Administrators</h1>\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <table>\n                    <thead style={{\"backgroundColor\" : \"#8db9e2\"}}>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Update profile</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {administratorsList.map((administrator, index) => {\n                    return <tr key={index}>\n                        <td>{administrator.userId}</td>\n                        <td>{administrator.firstName}</td>\n                        <td>{administrator.lastName}</td>\n                        <td>{administrator.phone}</td>\n                        <td>{administrator.email}</td>\n                        <td>\n                            <Link to={{\n                                pathname : \"/edit-administrator\",\n                                userId : administrator.userId,\n                                administratorFirstName : administrator.firstName,\n                                administratorLastName : administrator.lastName,\n                                administratorPhone : administrator.phone\n                            }}>\n                            <button type=\"button\" className=\"btn  btn-outline-success btn-sm\" >Edit</button>\n                            </Link>\n                        </td>\n                    </tr>\n                    })}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination\">\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n                        <li className=\"page-item active\">\n                            <a className=\"page-link\" href=\"#\">2 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default SeeAdministrators;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeCensors.js",["281","282","283","284","285"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nfunction SeeCensors(props) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [censorList, setCensorList] = useState([]);\n\n    useEffect(() => {\n        axios.get(`/user/all-by-role/CENSOR`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setCensorList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n    return (\n        <div>\n\n            <h1 className=\"d-flex justify-content-center\">Censors</h1>\n\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <table>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Update profile</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {censorList.map((censor, index) => {\n                        return <tr key={index}>\n                            <td>{censor.userId}</td>\n                            <td>{censor.firstName}</td>\n                            <td>{censor.lastName}</td>\n                            <td>{censor.phone}</td>\n                            <td>{censor.email}</td>\n                            <td>\n                                <Link to={{\n                                    pathname : \"/edit-censor\",\n                                    userId : censor.userId,\n                                    censorFirstName : censor.firstName,\n                                    censorLastName : censor.lastName,\n                                    censorPhone : censor.phone,\n                                    censorId : censor.id\n                                }}>\n                                    <button type=\"button\" className=\"btn  btn-outline-success btn-sm\" >Edit</button>\n                                </Link>\n                            </td>\n                        </tr>\n                    })}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination\">\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n                        <li className=\"page-item active\">\n                            <a className=\"page-link\" href=\"#\">2 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default SeeCensors;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeePresidents.js",["286","287","288","289","290","291","292"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nfunction SeePresidents(props) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [presidentsList, setPresidentsList] = useState([]);\n    const [editPresident, setEditPresident] = useState(false);\n\n    useEffect(() => {\n        axios.get(`/user/all-by-role/PRESIDENT`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setPresidentsList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n    return (\n        <div>\n\n            <h1 className=\"d-flex justify-content-center\">Presidents</h1>\n\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <table>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Update profile</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {presidentsList.map((president, index) => {\n                        return <tr key={index}>\n                            <td>{president.userId}</td>\n                            <td>{president.firstName}</td>\n                            <td>{president.lastName}</td>\n                            <td>{president.phone}</td>\n                            <td>{president.email}</td>\n                            <td>\n                                <Link to={{\n                                    pathname : \"/edit-president\",\n                                    presidentFirstName : president.firstName,\n                                    presidentLastName : president.lastName,\n                                    presidentPhone : president.phone,\n                                    presidentId : president.id\n                                }}>\n                                    <button type=\"button\" className=\"btn  btn-outline-success btn-sm\" >Edit</button>\n                                </Link>\n                            </td>\n                        </tr>\n                    })}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination\">\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n                        <li className=\"page-item active\">\n                            <a className=\"page-link\" href=\"#\">2 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default SeePresidents;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/AdministratorNavbar.js",["293","294"],"import {Link} from \"react-router-dom\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {UserContext} from \"../context/UserContext\";\nimport PendingButton from \"../user-access/PendingButton\";\n\nfunction AdministratorNavbar(props) {\n\n    const value = useContext(UserContext);\n    const [group, setGroup] = useState({});\n    const [activeOffers, setActiveOffers] = useState(0);\n\n    useEffect(() => {\n        value && !value.roles.includes(\"ADMIN\") && !value.roles.includes(\"SERVICE_PROVIDER\") &&\n        axios.get(`/group/get-by-id/${value.groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then(response => {\n                setGroup(response.data);\n            })\n\n    }, [value])\n\n\n    return (\n        <>\n{/*ADMINISTRATOR SERVICE OFFERS RECEIVED*/}\n            {value && value.roles.includes(\"ADMINISTRATOR\") &&\n            <Link to={{\n                pathname : \"/see-offers\",\n                groupId : group.groupId}} style={{\"color\" : \"white\"}} className=\"nav-link\" >Service Offers<span style={{\"backgroundColor\" : \"white\", \"color\" : \"red\", \"padding\" : \"1.5px\", \"borderRadius\" : \"5px\"}}>3</span></Link>}\n\n{/*ADMINISTRATOR JOIN REQUESTS*/}\n            {value && value.roles.includes(\"ADMINISTRATOR\") && <PendingButton/>}\n        </>\n    );\n}\n\nexport default AdministratorNavbar;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-access/PendingButton.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/google-maps/Maps.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/properties.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/RegisterLink.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-access/PendingRequestsList.js",["295","296","297","298"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from 'react-modal';\nimport axios from \"axios\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction PendingRequestsList(props) {\n\n    const value = useContext(UserContext);\n\n    const customStyles = {\n        content : {\n            top                   : '50%',\n            left                  : '50%',\n            right                 : 'auto',\n            bottom                : 'auto',\n            marginRight           : '-50%',\n            transform             : 'translate(-50%, -50%)'\n        }\n    };\n\n    const [userInModal, setUserInModal] = useState({\n        userId : \"\",\n        firstName : \"\",\n        lastName : \"\",\n        email : \"\",\n        phone : \"\",\n        buildingStreet : \"\",\n        buildingNumber : \"\",\n        buildingName : \"\",\n        buildingEntrance : \"\",\n        town : \"\",\n        country : \"\",\n        other : \"\",\n        userStatus : \"\"\n\n    })\n\n    let groupId = value.groupId;\n    let userId = value.userId;\n\n    console.log(value.groupId)\n\n    const [group, setGroup] = useState(\"\");\n\n    let subtitle;\n    const [modalIsOpen,setIsOpen] = React.useState(false);\n\n\n    function afterOpenModal() {\n        subtitle.style.color = '#000000';\n    }\n\n    function closeModal(){\n        setIsOpen(false);\n    }\n\n    const [redirect, setRedirect] = useState(true);\n    const [request, setRequest] = useState({});\n    const [pendingList, setPendingList] = useState([]);\n\n\n    useEffect(() => {\n        axios.get(`/user/pending/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then((response) => {\n                setPendingList(response.data);\n            })\n\n        axios.get(`/group/get-by-id/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then(response => {\n                setGroup(response.data);\n            })\n    }, [value, redirect]);\n\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\">{group.officialName}</h1>\n\n\n            {pendingList && pendingList.map((request, index) =>{\n                return <div key={index} className=\"d-flex justify-content-center margin-top-25\">\n                            <li onClick={(e) => {\n                                setIsOpen(true);\n                                const c = {...userInModal}\n                                c.userId = request.userId;\n                                c.firstName = request.firstName;\n                                c.lastName = request.lastName;\n                                c.phone = request.phone;\n                                c.email = request.email;\n                                c.buildingStreet = request.buildingStreet;\n                                c.buildingNumber = request.buildingNumber;\n                                c.buildingName = request.buildingName;\n                                c.buildingEntrance = request.buildingEntrance;\n                                c.town = request.town;\n                                c.country = request.country;\n                                c.other = request.other;\n                                c.userStatus = request.userStatus;\n                                setUserInModal(c);\n                            }} className={\"blue-underline\"}>\n                                {request.firstName} {request.lastName} - {request.buildingStreet}, {request.buildingNumber}\n                            </li>\n                        </div>\n\n            })}\n\n            <Modal\n                isOpen={modalIsOpen}\n                ariaHideApp={false}\n                onAfterOpen={afterOpenModal}\n                onRequestClose={closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n\n                <h2 ref={_subtitle => (subtitle = _subtitle)}>User Request</h2>\n                <br/>\n                <div>First name : <i className={\"float-right\"}>{userInModal.firstName}</i></div>\n                <div>Last name : <i className={\"float-right\"}>{userInModal.lastName}</i></div>\n                <div>Email : <i className={\"float-right\"}>{userInModal.email}</i></div>\n                <div>Phone : <i className={\"float-right\"}>{userInModal.phone}</i></div>\n                <div>Building street : <i className={\"float-right\"}>{userInModal.buildingStreet}</i></div>\n                <div>Building number : <i className={\"float-right\"}>{userInModal.buildingNumber}</i></div>\n                <div>Building name : <i className={\"float-right\"}>{userInModal.buildingName}</i></div>\n                <div>Building entrance : <i className={\"float-right\"}>{userInModal.buildingEntrance}</i></div>\n                <div>Town : <i className={\"float-right\"}>{userInModal.town}</i></div>\n                <div>Country : <i className={\"float-right\"}>{userInModal.country}</i></div>\n                <div>Other : <i className={\"float-right\"}>{userInModal.other}</i></div>\n                <div>Status : <i className={\"float-right\"}>{userInModal.userStatus}</i></div>\n\n                <button className=\"btn btn-outline-success\" onClick={e => {\n                    e.preventDefault();\n\n                    axios.put(`/user/accept-request/${userInModal.userId}`, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    })\n                        .then(() => {\n                            setRedirect(!redirect)\n                        })\n                        .catch((err) => {\n                            console.log(err)\n                        });\n\n                    closeModal();\n                }}>Accept</button>\n\n                <button className=\"btn btn-outline-danger margin-left-5\" onClick={e => {\n                    e.preventDefault();\n                    axios.put(`/user/reject-request/${userInModal.userId}`, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token'),\n                        }\n                    })\n                        .then(() =>{\n                            setRedirect(!redirect)\n                        })\n                    closeModal();\n                }}>Reject</button>\n\n                <button className=\"btn btn-outline-dark float-right margin-left-5\"  onClick={closeModal}>close</button>\n\n            </Modal>\n        </>\n    );\n}\n\nexport default PendingRequestsList;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/PresidentNavbar.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/SeeTickets.js",["299","300"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport '../App.css';\nimport {UserContext} from \"../context/UserContext\";\n\nfunction SeeTickets(props) {\n\n    const value = useContext(UserContext);\n    let buildingId = value.buildingId;\n\n    const [ticketList, setTicketList] = useState([]);\n    const [buttonVisibility, setButtonVisibility] = useState(true);\n    const [redirect, setRedirect] = useState(false);\n    const [reset, setReset] = useState(true);\n\n    useEffect(() => {\n        axios.get(`/ticket/${value.buildingId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then(response => {\n                setTicketList(response.data);\n            })\n    }, [buildingId, reset])\n\n\n    return (\n        <div>\n\n            <h1 className=\"d-flex justify-content-center\" >Building Tickets</h1>\n\n            {redirect && <Redirect to={{\n                pathname : \"/add-ticket\",\n                buildingId : buildingId\n            }} />}\n\n            <div className=\"d-flex justify-content-center\">\n                <button type=\"button\" className=\"btn btn-outline-info\" onClick={(e) => {\n                    e.preventDefault();\n                    setButtonVisibility(!buttonVisibility);\n                }}>Advanced Search</button>\n                {value.roles.includes(\"PRESIDENT\") &&\n                <button type=\"button\" className=\"btn btn-outline-info margin-left-10\" onClick={(e) => {\n                    e.preventDefault();\n                    setRedirect(true);\n                }}>Add Ticket</button>}\n            </div>\n\n            <div hidden={buttonVisibility}>\n                <div className=\"d-flex justify-content-center margin-bottom-25 margin-top-25\">\n                    <button type=\"button\" className=\"btn btn-success margin-right-10\" onClick={(e)=> {\n                        e.preventDefault();\n                        axios.get(`/ticket/get-all-filter/opened/Administrative/${buildingId}`, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token'),\n                            }\n                        })\n                            .then(response => {\n                                setTicketList(response.data);\n                            })\n                    }}>Opened tickets</button>\n                    <button type=\"button\" className=\"btn btn-warning margin-right-10\" onClick={(e)=> {\n                        e.preventDefault();\n                        axios.get(`/ticket/get-all-filter/in progress/Administrative/${buildingId}`, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token'),\n                            }\n                        })\n                            .then(response => {\n                                setTicketList(response.data);\n                            })\n                    }}>In Progress tickets</button>\n                    <button type=\"button\" className=\"btn btn-danger margin-right-10\" onClick={(e)=> {\n                        e.preventDefault();\n                        axios.get(`/ticket/get-all-filter/closed/Administrative/${buildingId}`, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token'),\n                            }\n                        })\n                            .then(response => {\n                                setTicketList(response.data);\n                            })\n                    }}>Closed Tickets</button>\n                </div>\n            </div>\n\n            <div className=\"d-flex justify-content-center margin-top-25 margin-bottom-25\">\n                <button type=\"button\" className=\"btn btn-outline-info btn-sm\" hidden={buttonVisibility} onClick={(e) => {\n                    e.preventDefault();\n                    setButtonVisibility(!buttonVisibility);\n                    setReset(!reset);\n                }}>Reset search</button>\n            </div>\n\n            <div className=\"d-flex justify-content-center\">\n                <table>\n                    <thead style={{\"backgroundColor\" : \"#8db9e2\"}}>\n                    <tr>\n                        <th>#</th>\n                        <th>Title</th>\n                        <th>Department</th>\n                        <th>Date Opened</th>\n                        <th>Assigned Service</th>\n                        <th>Price</th>\n                        <th>Date Closed</th>\n                        <th>Status</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {ticketList.map((ticket, index) => {\n                        return <tr key={index}>\n                            <td className=\"index\">{index+1}</td>\n                            <td className=\"ticket-title\">{ticket.title}</td>\n                            <td className=\"ticket-department\">{ticket.department}</td>\n                            <td className=\"ticket-opened-date\">{ticket.dateOpened}</td>\n\n                            {ticket.assignedServiceProvider ?\n                                <td className=\"ticket-service-provider\">\n                                    <Link to={{\n                                        pathname : '/assigned-service-provider',\n                                        providerId : ticket.assignedServiceProvider.id}}>\n                                        {ticket.assignedServiceProvider.firstName + \" \" + ticket.assignedServiceProvider.lastName}\n                                    </Link>\n                                </td>\n                                :\n                                <td className=\"ticket-service-provider\">No service provider assigned yet</td>\n                            }\n                            {ticket.status === \"in progress\" ||  ticket.status === \"closed\" ?\n                                <td className=\"ticket-total-price\">{ticket.totalPrice} RON</td>\n                                :\n                                <td className=\"ticket-total-price\">No accepted offer yet</td>\n                            }\n                            {ticket.dateClosed ?\n                                <td className=\"ticket-close-date\">{ticket.dateClosed}</td>\n                                :\n                                <td className=\"ticket-close-date\">Ticket is not closed yet</td>}\n\n                            {(() => {\n                                switch (ticket.status){\n                                    case \"opened\" :\n                                        return <td className=\"ticket-status\"><span className={\"green\"}>{ticket.status}</span></td>\n                                    case \"in progress\" :\n                                        return <td className=\"ticket-status\"><span className={\"orange\"}>{ticket.status}</span></td>\n                                    case \"closed\" :\n                                        return <td className=\"ticket-status\"><span className={\"red\"}>{ticket.status}</span></td>\n                                }\n                            })()}\n                        </tr>\n                    })}\n\n                    </tbody>\n                </table>\n            </div>\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <button className=\"btn btn-outline-dark margin-bottom-25 margin-right-10\" onClick={(e) => {\n                    e.preventDefault();\n                    window.history.back();\n                }}>Back</button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default SeeTickets;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/AddNewTicket.js",["301"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {departments} from \"../util/departments\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction AddNewTicket(props) {\n\n    const value = useContext(UserContext);\n    const [isLoading, setIsLoading] = useState(true);\n    const [redirect, setRedirect] = useState(false);\n    const [ticket, setTicket] = useState({\n        title : \"\",\n        buildingId : \"\",\n        groupId : \"\",\n        details : \"\",\n        actionTaken : \"\",\n        department : \"\",\n        type : \"\",\n        street : \"\",\n        number : \"\",\n        town : \"\"\n\n    });\n\n    useEffect(() => {\n        axios.get(`/building/${value.buildingId}`)\n            .then((response) => {\n                const s = {...ticket}\n                s.street = response.data.street;\n                s.number = response.data.number;\n                s.town = response.data.town;\n                setTicket(s);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post(`/ticket/add`, ticket, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <>\n            <div className=\"d-flex justify-content-center\">\n\n                {redirect && <Redirect to={{\n                    pathname : \"/tickets\",\n                    buildingId : value.buildingId\n                }} />}\n\n                <form action=\"\" onSubmit={handleSubmit}>\n                    <h1>Add Ticket</h1>\n{/*DEPARTMENT*/}\n                    <div className=\"input-group mb-3 margin-top-25\">\n\n                        <select className=\"custom-select\" id=\"inputGroupSelect01\" required value={ticket.department} onChange={e =>{\n                            const s = {...ticket};\n                            s.department = e.target.value;\n                            s.type = \"Administrative\";\n                            s.buildingId = value.buildingId;\n                            s.groupId = value.groupId;\n                            setTicket(s);\n                        }}>\n                            <option value=\"\" selected>Select department...</option>\n                            {departments.map((department, index) => {\n                                return <option key={index} value={department}>{department}</option>\n                            })}\n                        </select>\n                    </div>\n{/*TITLE*/}\n                    <div>\n                        <input className={\"poll-input\"} type=\"text\" name=\"title\" value={ticket.title} required placeholder=\"Title\"\n                               onChange={e => {\n                                   const s = {...ticket};\n                                   s.title = e.target.value;\n                                   setTicket(s);\n                               }}/>\n                    </div>\n{/*DETAILS*/}\n                    <div>\n                <textarea className={\"poll-input\"}  name=\"details\" value={ticket.details} required placeholder=\"Details\"\n                          onChange={e => {\n                              const s = {...ticket};\n                              s.details = e.target.value;\n                              setTicket(s);\n                          }}/>\n                    </div>\n{/*ACTION TAKEN*/}\n                    <div>\n                    <textarea className={\"poll-input\"}  name=\"actionTaken\" value={ticket.actionTaken}  placeholder=\"Action Taken\"\n                              onChange={e => {\n                                  const s = {...ticket};\n                                  s.actionTaken = e.target.value;\n                                  setTicket(s);\n                              }}/>\n                    </div>\n                    <Link to={{\n                        pathname : \"/tickets\",\n                        buildingId : value.buildingId\n                    }}>\n                        <button type=\"submit\" className=\"btn btn-outline-secondary margin-top-25 float-left\">Back</button>\n                    </Link>\n                    <button type=\"submit\" className=\"btn btn-outline-secondary margin-top-25 float-right\">Submit</button>\n\n                </form>\n            </div>\n                </>\n    );\n}\n\nexport default AddNewTicket;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/AddPoll.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/Results.js",["302","303"],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/SeePolls.js",["304","305"],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/TicketsAdministratorView.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/service.providers/ListOfServiceProviders.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/ProviderListNavbarComponent.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/ServiceProviderNavbar.js",["306","307","308"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction ServiceProviderNavbar(props) {\n\n    const value = useContext(UserContext);\n\n    return (\n        <>\n            {value && value.roles.includes(\"SERVICE_PROVIDER\") ?\n                <Link className=\"nav-link\" style={{\"color\": \"white\", \"cursor\": \"pointer\"}} to={\"/see-tickets\"}>See All Tickets</Link>\n                :\n                null}\n\n            {value && value.roles.includes(\"SERVICE_PROVIDER\") ?\n                <Link className=\"nav-link\" style={{\"color\": \"white\", \"cursor\": \"pointer\"}} to={\"/my-tickets\"}>My Tickets (5)</Link>\n                :\n                null}\n\n        </>\n    );\n}\n\nexport default ServiceProviderNavbar;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets.provider.view/SeePendingTickets.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/offers/OfferDetails.js",["309"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from 'react-router-dom';\nimport {UserContext} from \"../context/UserContext\";\n\nfunction OfferDetails(props) {\n\n    let ticketId = props.location.ticketId;\n    const value = useContext(UserContext);\n    const [response, setResponse] = useState({});\n    const [administratorRedirect, setAdministratorRedirect] = useState(false);\n    const [userRedirect, setUserRedirect] = useState(false);\n\n    useEffect(() => {\n        axios.get(`/ticket/${ticketId}/with-offers`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then(response => {\n                setResponse(response.data);\n            })\n    }, [ticketId])\n\n\n    return (\n        <div>\n            {administratorRedirect && <Redirect to={{\n                pathname : \"/see-offers\",\n                groupId : value.groupId\n            }} />}\n\n            {userRedirect && <Redirect to={{\n                pathname : \"/user-personal-tickets\"\n            }} />}\n\n            {response.pendingOffer && response.pendingOffer.length > 0\n                ?\n                <div>\n                    <h2 className=\"d-flex justify-content-center\">Ticket : {response.ticket.title}</h2>\n                    <h2 className=\"d-flex justify-content-center\">Department : {response.ticket.department.toUpperCase()}</h2>\n                </div>\n                :\n                <h4 className=\"d-flex justify-content-center\" style={{\"marginTop\" : \"150px\"}}>No offers received yet</h4>\n            }\n\n            {response.pendingOffer && response.pendingOffer.map((offer, index) => {\n                return  <div key={index} className=\"card mx-auto card shadow\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\"><i className=\"fas fa-user\"> </i> {offer.serviceProviderFirstName + \" \" + offer.serviceProviderLastName}</h5>\n\n                        <div className=\"rating\">\n                            Rating :\n                            <i className=\"fas fa-star fa-sm text-warning\"> </i>\n                            <i className=\"fas fa-star fa-sm text-warning\"> </i>\n                            <i className=\"fas fa-star fa-sm text-warning\"> </i>\n                            <i className=\"fas fa-star fa-sm text-warning\"> </i>\n                            <i className=\"far fa-star fa-sm text-warning\"> </i>\n                        </div>\n                        {/*{offer.serviceProvider.reviews.length > 0 ?*/}\n                        {/*    <p>*/}\n                        {/*        <Link to={{*/}\n                        {/*            pathname : \"/review-details\",*/}\n                        {/*            providerId : offer.serviceProvider.id}}>{offer.serviceProvider.reviews.length} reviews</Link>*/}\n                        {/*    </p>*/}\n                        {/*    :*/}\n                        {/*    <p>No reviews</p>*/}\n                        {/*}*/}\n                        <br/>\n                        <p><i className=\"fas fa-phone\"> </i> {offer.serviceProviderPhone}</p>\n                        <p><i className=\"fas fa-envelope\" > </i><span className={\"blue-underline\"}>{offer.serviceProviderEmail}</span></p>\n                        <p className=\"card-body\"><b className=\"d-flex justify-content-center\">Price : {offer.serviceProviderPrice} RON</b></p>\n\n                        <p><i className=\"fas fa-calendar-alt\"> </i> Received on : {offer.serviceProviderDate}</p>\n\n                        <button type=\"submit\" className=\"btn btn-outline-success float-right margin-top-25\" onClick={(e) => {\n                            e.preventDefault();\n                            axios.put(`/ticket/accept-offer/${ticketId}`, offer, {\n                                headers: {\n                                    Authorization: 'Bearer ' + localStorage.getItem('token'),\n                                }\n                            })\n                                .then(() => {\n                                    console.log(\"Added\")\n                                })\n                            axios.delete(`/pending-offer/all/${response.ticket.ticketId}`, {\n                                headers: {\n                                    Authorization: 'Bearer ' + localStorage.getItem('token'),\n                                }\n                            })\n                                .then(() => {\n                                    if(value.roles.includes(\"ADMINISTRATOR\")){\n                                        setAdministratorRedirect(true);\n                                    }else{\n                                        setUserRedirect(true);\n                                    }\n                                })\n                        }}>Accept\n                        </button>\n\n\n                        <button className=\"btn btn-outline-danger margin-top-25\" onClick={(e) => {\n                            e.preventDefault();\n                            axios.delete(`/api/reject-pending_service_offer/${offer.id}`, {\n                                headers: {\n                                    Authorization: 'Bearer ' + localStorage.getItem('token'),\n                                }\n                            })\n                                .then(() => {\n                                    if(value.roles.includes(\"ADMINISTRATOR\")){\n                                        setAdministratorRedirect(true);\n                                    }else{\n                                        setUserRedirect(true);\n                                    }\n                                })\n                        }}>Reject\n                        </button>\n                    </div>\n\n                </div>\n\n            })}\n            {/*<div className=\"d-flex justify-content-center margin-top-25\">*/}\n            {/*    <Link to={{*/}\n            {/*        pathname : \"/see-offers\",*/}\n            {/*        groupId : groupId*/}\n            {/*    }}>*/}\n            {/*        <button className=\"btn btn-outline-dark margin-right-5 margin-bottom-25\">Back</button>*/}\n            {/*    </Link>*/}\n            {/*</div>*/}\n\n        </div>\n    );\n}\n\nexport default OfferDetails;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/SeeAssignedServiceOfferDetails.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/AverageStarRating.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/service.providers/ReviewDetails.js",["310","311","312","313","314","315"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport {StarRating} from \"../util/StarRating\";\n\nfunction ReviewDetails(props) {\n\n    let providerId = props.location.providerId;\n    let averageStarRating = props.location.averageStarRating;\n    let rating = props.location.rating;\n    const [serviceProvider, setServiceProvider] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [serviceProviderReviewList, setServiceProviderReviewList] = useState([]);\n    const [totalStars, setTotalStars] = useState([]);\n    const [resultsWithPercentage, setResultsWithPercentage] = useState({});\n\n\n    useEffect(() => {\n        axios.get(`/user/provider-with-reviews/${providerId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setServiceProvider(response.data);\n                setIsLoading(true);\n            })\n        axios.get(`/review/by-provider/${providerId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then((response) => {\n                setServiceProviderReviewList(response.data);\n            })\n\n\n    }, [isLoading])\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className={\"margin-top-25\"}>\n                    <h2>Reviews <small style={{\"color\" : \"grey\", \"fontSize\" : \"20px\"}}>({serviceProvider.totalReviews} reviews)</small></h2>\n                </div>\n\n                <div className=\"container\">\n                    <div style={{\"fontSize\" : \"50px\", \"lineHeight\" : \"58px\", \"marginBottom\" : \"15px\"}}>\n                        {rating.toString().substring(0, 4)} {StarRating(rating)}\n                    </div>\n                </div>\n\n\n                <div className={\"margin-top-25\"}>\n                    <div className={\"margin-bottom-25\"}>\n                        <span className={\"blue-underline\"}>5 stars ({serviceProvider.starStatistics && serviceProvider.starStatistics[5]})</span><ProgressBar variant=\"success\" now={55} />\n                    </div>\n                    <div className={\"margin-bottom-25\"}>\n                        <span className={\"blue-underline\"} >4 stars ({serviceProvider.starStatistics && serviceProvider.starStatistics[4]})</span><ProgressBar variant=\"warning\" now={20}/>\n                    </div>\n\n                    <div className={\"margin-bottom-25\"}>\n                        <span className={\"blue-underline\"} >3 stars ({serviceProvider.starStatistics && serviceProvider.starStatistics[3]})</span><ProgressBar variant=\"danger\" now={20} />\n                    </div>\n\n                    <div className={\"margin-bottom-25\"}>\n                        <span className={\"blue-underline\"} >2 stars ({serviceProvider.starStatistics && serviceProvider.starStatistics[2]})</span><ProgressBar variant=\"danger\" now={5} />\n                    </div>\n\n                    <div className={\"margin-bottom-25\"}>\n                        <span className={\"blue-underline\"} >1 star ({serviceProvider.starStatistics && serviceProvider.starStatistics[1]})</span><ProgressBar variant=\"info\" now={5} />\n                    </div>\n                </div>\n\n\n                <div style={{\"marginTop\" : \"80px\", \"marginLeft\" : \"50px\"}}>\n                    {serviceProviderReviewList && serviceProviderReviewList.map((review, index) => {\n                        return  <div key={index} className={\"margin-top-25 \"}>\n                            <h4>{review.title}</h4>\n\n                            <div>\n                                <p className={\"grey\"}><b>{review.givingUserFirstName + \" \" + review.givingUserLastName}</b></p>\n                                <p className={\"grey\"} style={{\"fontSize\" : \"15px\"}}>{review.date}</p>\n                            </div>\n\n                            <div>\n                                {StarRating(review.starNumber)}\n                            </div>\n\n                            <div className={\"margin-top-25 margin-bottom-25\"} style={{\"padding\" : \"40px\"}}>{review.review}</div>\n                            <div style={{\"border\" : \"solid 0.5px\", \"borderColor\" : \"#DCDCDC\"}}> </div>\n                        </div>\n\n                    })}\n                </div>\n\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25 margin-bottom-25\">\n                <Link to={{\n                    pathname : \"/assigned-service-provider\",\n                    providerId : providerId\n                }}>\n                    <button className=\"btn btn-outline-dark margin-right-5\">Back</button>\n                </Link>\n            </div>\n\n        </div>\n    );\n}\n\nexport default ReviewDetails;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/StarRating.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/MyBuilding.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/Polls.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/Vote.js",["316"],{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","severity":1,"message":"322","line":28,"column":12,"nodeType":"323","messageId":"324","endLine":28,"endColumn":22},{"ruleId":"321","severity":1,"message":"325","line":3,"column":8,"nodeType":"323","messageId":"324","endLine":3,"endColumn":13},{"ruleId":"321","severity":1,"message":"326","line":9,"column":12,"nodeType":"323","messageId":"324","endLine":9,"endColumn":17},{"ruleId":"321","severity":1,"message":"327","line":3,"column":15,"nodeType":"323","messageId":"324","endLine":3,"endColumn":23},{"ruleId":"321","severity":1,"message":"328","line":1,"column":16,"nodeType":"323","messageId":"324","endLine":1,"endColumn":25},{"ruleId":"321","severity":1,"message":"328","line":1,"column":16,"nodeType":"323","messageId":"324","endLine":1,"endColumn":25},{"ruleId":"321","severity":1,"message":"328","line":1,"column":16,"nodeType":"323","messageId":"324","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"330","line":97,"column":41,"nodeType":"331","messageId":"332","endLine":97,"endColumn":43},{"ruleId":"333","severity":1,"message":"334","line":127,"column":29,"nodeType":"335","endLine":127,"endColumn":77},{"ruleId":"333","severity":1,"message":"334","line":129,"column":51,"nodeType":"335","endLine":129,"endColumn":85},{"ruleId":"333","severity":1,"message":"334","line":131,"column":29,"nodeType":"335","endLine":131,"endColumn":63},{"ruleId":"333","severity":1,"message":"334","line":133,"column":51,"nodeType":"335","endLine":133,"endColumn":85},{"ruleId":"333","severity":1,"message":"334","line":135,"column":29,"nodeType":"335","endLine":135,"endColumn":63},{"ruleId":"333","severity":1,"message":"334","line":68,"column":29,"nodeType":"335","endLine":68,"endColumn":77},{"ruleId":"333","severity":1,"message":"334","line":70,"column":51,"nodeType":"335","endLine":70,"endColumn":85},{"ruleId":"333","severity":1,"message":"334","line":72,"column":29,"nodeType":"335","endLine":72,"endColumn":63},{"ruleId":"333","severity":1,"message":"334","line":74,"column":51,"nodeType":"335","endLine":74,"endColumn":85},{"ruleId":"333","severity":1,"message":"334","line":76,"column":29,"nodeType":"335","endLine":76,"endColumn":63},{"ruleId":"333","severity":1,"message":"334","line":69,"column":29,"nodeType":"335","endLine":69,"endColumn":77},{"ruleId":"333","severity":1,"message":"334","line":71,"column":51,"nodeType":"335","endLine":71,"endColumn":85},{"ruleId":"333","severity":1,"message":"334","line":73,"column":29,"nodeType":"335","endLine":73,"endColumn":63},{"ruleId":"333","severity":1,"message":"334","line":75,"column":51,"nodeType":"335","endLine":75,"endColumn":85},{"ruleId":"333","severity":1,"message":"334","line":77,"column":29,"nodeType":"335","endLine":77,"endColumn":63},{"ruleId":"321","severity":1,"message":"336","line":9,"column":12,"nodeType":"323","messageId":"324","endLine":9,"endColumn":25},{"ruleId":"321","severity":1,"message":"337","line":9,"column":27,"nodeType":"323","messageId":"324","endLine":9,"endColumn":43},{"ruleId":"333","severity":1,"message":"334","line":69,"column":29,"nodeType":"335","endLine":69,"endColumn":77},{"ruleId":"333","severity":1,"message":"334","line":71,"column":51,"nodeType":"335","endLine":71,"endColumn":85},{"ruleId":"333","severity":1,"message":"334","line":73,"column":29,"nodeType":"335","endLine":73,"endColumn":63},{"ruleId":"333","severity":1,"message":"334","line":75,"column":51,"nodeType":"335","endLine":75,"endColumn":85},{"ruleId":"333","severity":1,"message":"334","line":77,"column":29,"nodeType":"335","endLine":77,"endColumn":63},{"ruleId":"321","severity":1,"message":"338","line":11,"column":12,"nodeType":"323","messageId":"324","endLine":11,"endColumn":24},{"ruleId":"321","severity":1,"message":"339","line":11,"column":26,"nodeType":"323","messageId":"324","endLine":11,"endColumn":41},{"ruleId":"321","severity":1,"message":"340","line":39,"column":9,"nodeType":"323","messageId":"324","endLine":39,"endColumn":15},{"ruleId":"321","severity":1,"message":"341","line":58,"column":12,"nodeType":"323","messageId":"324","endLine":58,"endColumn":19},{"ruleId":"321","severity":1,"message":"342","line":58,"column":21,"nodeType":"323","messageId":"324","endLine":58,"endColumn":31},{"ruleId":"343","severity":1,"message":"344","line":80,"column":8,"nodeType":"345","endLine":80,"endColumn":25,"suggestions":"346"},{"ruleId":"343","severity":1,"message":"347","line":26,"column":8,"nodeType":"345","endLine":26,"endColumn":27,"suggestions":"348"},{"ruleId":"349","severity":1,"message":"350","line":141,"column":33,"nodeType":"351","messageId":"352","endLine":148,"endColumn":34},{"ruleId":"343","severity":1,"message":"353","line":36,"column":8,"nodeType":"345","endLine":36,"endColumn":19,"suggestions":"354"},{"ruleId":"321","severity":1,"message":"355","line":11,"column":18,"nodeType":"323","messageId":"324","endLine":11,"endColumn":25},{"ruleId":"321","severity":1,"message":"356","line":12,"column":21,"nodeType":"323","messageId":"324","endLine":12,"endColumn":31},{"ruleId":"321","severity":1,"message":"357","line":15,"column":12,"nodeType":"323","messageId":"324","endLine":15,"endColumn":24},{"ruleId":"321","severity":1,"message":"358","line":15,"column":26,"nodeType":"323","messageId":"324","endLine":15,"endColumn":41},{"ruleId":"321","severity":1,"message":"328","line":1,"column":28,"nodeType":"323","messageId":"324","endLine":1,"endColumn":37},{"ruleId":"321","severity":1,"message":"359","line":1,"column":39,"nodeType":"323","messageId":"324","endLine":1,"endColumn":47},{"ruleId":"321","severity":1,"message":"360","line":2,"column":8,"nodeType":"323","messageId":"324","endLine":2,"endColumn":13},{"ruleId":"321","severity":1,"message":"361","line":3,"column":9,"nodeType":"323","messageId":"324","endLine":3,"endColumn":13},{"ruleId":"321","severity":1,"message":"362","line":10,"column":9,"nodeType":"323","messageId":"324","endLine":10,"endColumn":26},{"ruleId":"321","severity":1,"message":"363","line":15,"column":12,"nodeType":"323","messageId":"324","endLine":15,"endColumn":22},{"ruleId":"321","severity":1,"message":"364","line":15,"column":24,"nodeType":"323","messageId":"324","endLine":15,"endColumn":37},{"ruleId":"321","severity":1,"message":"365","line":16,"column":12,"nodeType":"323","messageId":"324","endLine":16,"endColumn":33},{"ruleId":"321","severity":1,"message":"366","line":16,"column":35,"nodeType":"323","messageId":"324","endLine":16,"endColumn":59},{"ruleId":"343","severity":1,"message":"367","line":39,"column":8,"nodeType":"345","endLine":39,"endColumn":19,"suggestions":"368"},{"ruleId":"343","severity":1,"message":"369","line":32,"column":8,"nodeType":"345","endLine":32,"endColumn":19,"suggestions":"370"},"no-native-reassign",["371"],"no-negated-in-lhs",["372"],"no-unused-vars","'buildingId' is assigned a value but never used.","Identifier","unusedVar","'Login' is defined but never used.","'group' is assigned a value but never used.","'Redirect' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'editPresident' is assigned a value but never used.","'setEditPresident' is assigned a value but never used.","'activeOffers' is assigned a value but never used.","'setActiveOffers' is assigned a value but never used.","'userId' is assigned a value but never used.","'request' is assigned a value but never used.","'setRequest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'groupId'. Either include it or remove the dependency array.","ArrayExpression",["373"],"React Hook useEffect has a missing dependency: 'value.buildingId'. Either include it or remove the dependency array.",["374"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'ticket' and 'value.buildingId'. Either include them or remove the dependency array.",["375"],"'setPoll' is assigned a value but never used.","'setAnswers' is assigned a value but never used.","'pollToUpdate' is assigned a value but never used.","'setPollToUpdate' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'averageStarRating' is assigned a value but never used.","'totalStars' is assigned a value but never used.","'setTotalStars' is assigned a value but never used.","'resultsWithPercentage' is assigned a value but never used.","'setResultsWithPercentage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'providerId'. Either include it or remove the dependency array.",["376"],"React Hook useEffect has a missing dependency: 'pollId'. Either include it or remove the dependency array.",["377"],"no-global-assign","no-unsafe-negation",{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},"Update the dependencies array to be: [value, redirect, groupId]",{"range":"388","text":"389"},"Update the dependencies array to be: [buildingId, reset, value.buildingId]",{"range":"390","text":"391"},"Update the dependencies array to be: [isLoading, ticket, value.buildingId]",{"range":"392","text":"393"},"Update the dependencies array to be: [isLoading, providerId]",{"range":"394","text":"395"},"Update the dependencies array to be: [isLoading, pollId]",{"range":"396","text":"397"},[2049,2066],"[value, redirect, groupId]",[842,861],"[buildingId, reset, value.buildingId]",[1071,1082],"[isLoading, ticket, value.buildingId]",[1376,1387],"[isLoading, providerId]",[961,972],"[isLoading, pollId]"]