[{"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/index.js":"1","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/App.js":"2","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/homepage/HomePage.js":"3","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/Register.js":"4","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/UserRegister.js":"5","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/cities.js":"6","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/ProviderRegister.js":"7","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/departments.js":"8","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/Login.js":"9","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/context/UserContext.js":"10","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/Navbar.js":"11","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/AdminNavbar.js":"12","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/AuthenticationButton.js":"13","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/Logout.js":"14","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/LoginButton.js":"15","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/UserNavbar.js":"16","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/Groups.js":"17","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/AddGroup.js":"18","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buttons/SaveButton.js":"19","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buttons/CancelButton.js":"20","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/GroupInfo.js":"21","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/EditGroup.js":"22","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buildings/AddBuilding.js":"23","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buildings/SeeBuildings.js":"24","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddAdministrator.js":"25","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditAdministrator.js":"26","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddCensor.js":"27","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditPresident.js":"28","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddPresident.js":"29","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditCensor.js":"30","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/AdminUserStatistics.js":"31","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeUsers.js":"32","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeAdministrators.js":"33","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeCensors.js":"34","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeePresidents.js":"35","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/AdministratorNavbar.js":"36","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-access/PendingButton.js":"37","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/google-maps/Maps.js":"38","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/properties.js":"39","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/RegisterLink.js":"40","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-access/PendingRequestsList.js":"41","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/PresidentNavbar.js":"42","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/AddNewTicket.js":"43","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/AddPoll.js":"44","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/Results.js":"45","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/SeePolls.js":"46","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/service.providers/ListOfServiceProviders.js":"47","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/ProviderListNavbarComponent.js":"48","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/ServiceProviderNavbar.js":"49","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets.provider.view/SeePendingTickets.js":"50","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/offers/OfferDetails.js":"51","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/SeeAssignedServiceOfferDetails.js":"52","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/AverageStarRating.js":"53","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/service.providers/ReviewDetails.js":"54","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/StarRating.js":"55","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/MyBuilding.js":"56","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/Polls.js":"57","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/Vote.js":"58","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/TicketsAdministratorAndPersonalView.js":"59","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/contact/Contact.js":"60"},{"size":199,"mtime":1614755354637,"results":"61","hashOfConfig":"62"},{"size":4625,"mtime":1616751145124,"results":"63","hashOfConfig":"62"},{"size":333,"mtime":1616750919346,"results":"64","hashOfConfig":"62"},{"size":1870,"mtime":1614760869206,"results":"65","hashOfConfig":"62"},{"size":10621,"mtime":1614841306614,"results":"66","hashOfConfig":"62"},{"size":692,"mtime":1612433903989,"results":"67","hashOfConfig":"62"},{"size":7895,"mtime":1614761215173,"results":"68","hashOfConfig":"62"},{"size":668,"mtime":1613727438011,"results":"69","hashOfConfig":"62"},{"size":3354,"mtime":1614765543497,"results":"70","hashOfConfig":"62"},{"size":851,"mtime":1613555044126,"results":"71","hashOfConfig":"62"},{"size":1698,"mtime":1616751244045,"results":"72","hashOfConfig":"62"},{"size":455,"mtime":1614765912096,"results":"73","hashOfConfig":"62"},{"size":367,"mtime":1614766087394,"results":"74","hashOfConfig":"62"},{"size":491,"mtime":1615549413156,"results":"75","hashOfConfig":"62"},{"size":351,"mtime":1614766087382,"results":"76","hashOfConfig":"62"},{"size":2057,"mtime":1616670816693,"results":"77","hashOfConfig":"62"},{"size":6987,"mtime":1616753485417,"results":"78","hashOfConfig":"62"},{"size":4823,"mtime":1614767156085,"results":"79","hashOfConfig":"62"},{"size":225,"mtime":1613376635542,"results":"80","hashOfConfig":"62"},{"size":197,"mtime":1613377080344,"results":"81","hashOfConfig":"62"},{"size":6364,"mtime":1614847312579,"results":"82","hashOfConfig":"62"},{"size":3048,"mtime":1614768297348,"results":"83","hashOfConfig":"62"},{"size":3730,"mtime":1616741417616,"results":"84","hashOfConfig":"62"},{"size":9296,"mtime":1616753175011,"results":"85","hashOfConfig":"62"},{"size":2819,"mtime":1615470969995,"results":"86","hashOfConfig":"62"},{"size":3594,"mtime":1614847351971,"results":"87","hashOfConfig":"62"},{"size":2721,"mtime":1614771868901,"results":"88","hashOfConfig":"62"},{"size":3440,"mtime":1614847668644,"results":"89","hashOfConfig":"62"},{"size":3352,"mtime":1614778757676,"results":"90","hashOfConfig":"62"},{"size":3419,"mtime":1614847351959,"results":"91","hashOfConfig":"62"},{"size":2037,"mtime":1614926459846,"results":"92","hashOfConfig":"62"},{"size":5744,"mtime":1614772754545,"results":"93","hashOfConfig":"62"},{"size":3510,"mtime":1614847192713,"results":"94","hashOfConfig":"62"},{"size":3444,"mtime":1614847415100,"results":"95","hashOfConfig":"62"},{"size":3520,"mtime":1614772754553,"results":"96","hashOfConfig":"62"},{"size":1467,"mtime":1616670870821,"results":"97","hashOfConfig":"62"},{"size":1000,"mtime":1614857714184,"results":"98","hashOfConfig":"62"},{"size":1901,"mtime":1616575291014,"results":"99","hashOfConfig":"62"},{"size":88,"mtime":1613727437999,"results":"100","hashOfConfig":"62"},{"size":368,"mtime":1616751293313,"results":"101","hashOfConfig":"62"},{"size":6625,"mtime":1614849989898,"results":"102","hashOfConfig":"62"},{"size":1013,"mtime":1616674436246,"results":"103","hashOfConfig":"62"},{"size":5498,"mtime":1616675551009,"results":"104","hashOfConfig":"62"},{"size":4354,"mtime":1616583390573,"results":"105","hashOfConfig":"62"},{"size":3233,"mtime":1616666110357,"results":"106","hashOfConfig":"62"},{"size":7646,"mtime":1616594815703,"results":"107","hashOfConfig":"62"},{"size":12601,"mtime":1617091119541,"results":"108","hashOfConfig":"62"},{"size":377,"mtime":1614926773802,"results":"109","hashOfConfig":"62"},{"size":827,"mtime":1614927157863,"results":"110","hashOfConfig":"62"},{"size":7274,"mtime":1616575332991,"results":"111","hashOfConfig":"62"},{"size":9093,"mtime":1616676912904,"results":"112","hashOfConfig":"62"},{"size":3131,"mtime":1617088829520,"results":"113","hashOfConfig":"62"},{"size":356,"mtime":1615556783737,"results":"114","hashOfConfig":"62"},{"size":5584,"mtime":1617090458954,"results":"115","hashOfConfig":"62"},{"size":337,"mtime":1616578288000,"results":"116","hashOfConfig":"62"},{"size":2676,"mtime":1616674225516,"results":"117","hashOfConfig":"62"},{"size":4418,"mtime":1616666024512,"results":"118","hashOfConfig":"62"},{"size":6394,"mtime":1616593757633,"results":"119","hashOfConfig":"62"},{"size":24992,"mtime":1616750527426,"results":"120","hashOfConfig":"62"},{"size":839,"mtime":1616752289174,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"qdf31z",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"124"},"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/index.js",[],["262","263"],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/App.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/homepage/HomePage.js",["264"],"import React from 'react';\n\n\nfunction HomePage(props) {\n\n\n\n    return (\n        <div>\n            <img className=\"card mx-auto shadow\" src={`/images/homepage.jpeg`} alt={\"Smart City Picture\"} style={{\"width\" : \"85%\", \"height\" : \"85%\", \"marginTop\" : \"25px\", \"borderRadius\": \"10px\"}}/>\n        </div>\n    );\n}\n\nexport default HomePage;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/Register.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/UserRegister.js",["265"],"import React, {useEffect, useState} from 'react';\nimport {cities} from \"../util/cities\";\nimport {Redirect} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction UserRegister(props) {\n\n    const [successfullyRegistered, setSuccessfullyRegistered] = useState(false);\n    const [emailExist, setEmailExist] = useState(false);\n    const [userToAdd, setUserToAdd] = useState({\n        firstName : \"\",\n        lastName : \"\",\n        phone : \"\",\n        email : \"\",\n        buildingStreet : \"\",\n        buildingNumber : \"\",\n        buildingName : \"\",\n        buildingEntrance : \"\",\n        town : \"\",\n        country : \"\",\n        other : \"\",\n        password : \"\",\n        buildingId : \"\",\n        groupId : \"\"\n    });\n\n    const [groupId, setGroupId] = useState(\"\");\n    const [buildingId, setBuildingId] = useState(\"\");\n    const [groupList, setGroupList] = useState([]);\n    const [buildingList, setBuildingList] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const handleTownChange = (e) => {\n        const s = {...userToAdd};\n        s.town = e.target.value;\n        setUserToAdd(s);\n    }\n\n    const handleCountryChange = (e) => {\n        const s = {...userToAdd};\n        s.country = e.target.value;\n        setUserToAdd(s);\n    }\n\n    const handleGroupChange = (e) => {\n        setGroupId(e.target.value);\n        const s = {...userToAdd};\n        s.groupId = e.target.value;\n        setUserToAdd(s);\n    }\n\n    const handleBuildingChange = (e) => {\n        setBuildingId(e.target.value);\n        const s = {...userToAdd};\n        s.buildingId = e.target.value;\n        setUserToAdd(s);\n    }\n\n    useEffect(() => {\n        axios.get(`/group/get-all`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setGroupList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n    useEffect(() =>{\n        axios.get(`/building/by-groupId/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setBuildingList(response.data);\n            })\n    }, [groupId])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post(`/user/`, userToAdd, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then((response) => {\n                if(response.status === 201){\n                    setSuccessfullyRegistered(true)\n                }\n            })\n            .catch((err) => {\n                if(err.response.status === 409){\n                    setEmailExist(true);\n                }else{\n                    console.log(err)\n                }\n            })\n    }\n\n    return (\n        <div>\n            {emailExist && (\n                <div  className={\"d-flex justify-content-center\"}>\n                    <div className={\"wrong-credentials\"}>\n                        <p style={{ margin: 'auto' }}>Email already in use</p>\n                    </div>\n                </div>\n            )}\n            <div className=\"d-flex justify-content-center\">\n                {successfullyRegistered && <Redirect to={{\n                    pathname : \"/login\"\n                }} />}\n\n                <form action=\"\" onSubmit={handleSubmit}>\n                    <h1>User</h1>\n{/*USER COUNTRY*/}\n                    <div>\n                        <select className=\"custom-select\" id=\"inputGroupSelect01\" onChange={handleCountryChange} required>\n                            <option value=\"\" selected>Choose country...</option>\n                            <option  value={\"Romania\"}>Romania</option>\n                        </select>\n                    </div>\n{/*USER TOWN*/}\n                    <div>\n                        <select className=\"custom-select margin-top-15\" id=\"inputGroupSelect01\" onChange={handleTownChange} required>\n                            <option value=\"\" selected>Choose town...</option>\n                            {cities.sort().map((city, index) => {\n                                return <option key={index} value={city}>{city}</option>\n                            })}\n                        </select>\n                    </div>\n                    {/*TODO set group and building required*/}\n{/*/!*SELECT GROUP*!/*/}\n                    <div className=\"input-group mb-3\">\n                        <select className=\"custom-select margin-top-15\" id=\"inputGroupSelect01\"  onChange={handleGroupChange}>\n                            <option value=\"\" selected>Select group...</option>\n                            {groupList.map((group, index) => {\n                                return <option key={index} value={group.groupId}>{group.shortName}</option>\n                            })}\n                        </select>\n                    </div>\n{/*/!*SELECT BUILDING*!/*/}\n                    <div className=\"input-group mb-3\">\n                        <select className=\"custom-select\" id=\"inputGroupSelect01\"  onChange={handleBuildingChange}>\n                            <option value=\"\" selected>Select building...</option>\n                            {buildingList && buildingList.map((building, index) => {\n                                return <option key={index} value={building.buildingId}>{building.street + \", \" + building.number}</option>\n                            })}\n                        </select>\n                    </div>\n{/*USER FIRST NAME*/}\n                    <div>\n                        <input type=\"text\" name=\"firstName\" value={userToAdd.firstName} required placeholder=\"First Name\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.firstName = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER LAST NAME*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"lastName\" value={userToAdd.lastName} required placeholder=\"Last Name\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.lastName = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER PHONE*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"phone\" value={userToAdd.phone} required  placeholder=\"Phone number\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.phone = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER STREET*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"street\" value={userToAdd.buildingStreet} required placeholder=\"Street\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.buildingStreet = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER STREET NUMBER*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"number\" value={userToAdd.buildingNumber} required placeholder=\"Number\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.buildingNumber = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER BUILDING NAME*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"buildingName\" value={userToAdd.buildingName} placeholder=\"Building name\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.buildingName = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER BUILDING ENTRANCE*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"buildingEntrance\"  value={userToAdd.buildingEntrance} placeholder=\"Building entrance\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.buildingEntrance = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER OTHER INFO*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"other\" value={userToAdd.other} placeholder=\"Other\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.other = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER EMAIL*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"text\" name=\"email\" value={userToAdd.email} required  placeholder=\"Email\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.email = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n{/*USER PASSWORD*/}\n                    <div>\n                        <input style={{\"marginTop\": \"10px\"}} type=\"password\" name=\"email\" value={userToAdd.password} required  placeholder=\"Password\"\n                               onChange={e => {\n                                   const s = {...userToAdd};\n                                   s.password = e.target.value;\n                                   setUserToAdd(s);\n                               }}/>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-outline-secondary float-right margin-top-25\">Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default UserRegister;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/cities.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/ProviderRegister.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/departments.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/Login.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/context/UserContext.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/Navbar.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/AdminNavbar.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/AuthenticationButton.js",["266"],"import React, {useContext} from 'react';\nimport Logout from \"./Logout\";\nimport Login from \"./Login\";\nimport {UserContext} from \"../context/UserContext\";\nimport LoginButton from \"./LoginButton\";\n\n\nconst AuthenticationButton = () => {\n\n    const value = useContext(UserContext);\n\n    return value ? <Logout /> : <LoginButton />;\n};\n\nexport default AuthenticationButton;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/Logout.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/login/LoginButton.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/UserNavbar.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/Groups.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/AddGroup.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buttons/SaveButton.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buttons/CancelButton.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/GroupInfo.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/groups/EditGroup.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buildings/AddBuilding.js",["267","268"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport SaveButton from \"../buttons/SaveButton\";\n\nfunction AddBuilding(props) {\n    let groupId = props.location.groupId;\n\n    const [group, setGroup] = useState({});\n    const [redirect, setRedirect] = useState(false);\n    const [building, setBuilding] = useState({\n        street : \"\",\n        number : \"\",\n        town : \"\",\n        country : \"\",\n        buildingName : \"\",\n        entrance : \"\",\n        groupId : \"\"\n    })\n\n    useEffect(() =>{\n        axios.get(`/group/get-by-id/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                const s = {...building};\n                s.town = response.data.town;\n                s.country = response.data.country;\n                s.groupId = groupId;\n                setBuilding(s);\n                setGroup(response.data);\n            })\n    }, [groupId])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post(`/building/add`, building, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            })\n    }\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\" >Add Building</h1>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                {redirect && <Redirect to={{\n                    pathname : \"/see-buildings\",\n                    groupId : groupId\n                }} />}\n                <form onSubmit={handleSubmit}>\n\n                    <div>\n                        <input type=\"text\" name=\"street\" value={building.street} onChange={e => {\n                            const s = {...building};\n                            s.street = e.target.value;\n                            setBuilding(s);\n                        }} required placeholder=\"Street\"/>\n                    </div>\n                    <div>\n\n                        <input className={\"margin-top-25\"} type=\"text\" name=\"number\" value={building.number} onChange={e => {\n                            const s = {...building};\n                            s.number = e.target.value;\n                            setBuilding(s);\n                        }} required placeholder=\"Number\"/>\n                    </div>\n                    <div>\n                        <input  className={\"margin-top-25\"} type=\"text\" name=\"buildingName\" value={building.buildingName} onChange={e => {\n                            const s = {...building};\n                            s.buildingName = e.target.value;\n                            setBuilding(s);\n                        }} placeholder=\"Building Name\"/>\n                    </div>\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\" name=\"buildingEntrance\" value={building.entrance} onChange={e => {\n                            const s = {...building};\n                            s.entrance = e.target.value;\n                            setBuilding(s);\n                        }} placeholder=\"Building Entrance\"\n                        />\n                    </div>\n\n                    <Link to={{\n                        pathname : '/group',\n                        groupId : groupId}}>\n                        <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                    </Link>\n                    <SaveButton name={\"Add\"}/>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default AddBuilding;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/buildings/SeeBuildings.js",["269"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction SeeBuildings(props) {\n\n    let groupId = props.location.groupId;\n    const value = useContext(UserContext);\n    const [buildingList, setBuildingsList] = useState([]);\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        axios.get(`/building/buildings-and-presidents/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setBuildingsList(response.data);\n                console.log(response.data)\n            })\n    }, [groupId, redirect])\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\">Number of buildings : {buildingList && buildingList.length}</h1>\n            <div className=\"d-flex justify-content-center\">\n                <i className=\"fas fa-square\" style={{\"color\" : \"#d2c6e2\"}}> <span style={{\"color\": \"black\"}}> My buildings </span> </i>\n            </div><br/>\n            <div className=\"d-flex justify-content-center\">\n                <i className=\"fas fa-square\" style={{\"color\" : \"#c6e2de\"}}> <span style={{\"color\": \"black\"}}> Group buildings</span></i>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25 margin-bottom-25\">\n                <Link to={{\n                    pathname : '/group',\n                    groupId : groupId}}>\n                    <button className=\"btn btn-outline-dark\">Back to group</button>\n                </Link>\n            </div>\n            <div className='row align-items-center'>\n            {buildingList && buildingList.map((building, index) => {\n                if(value.buildingId === building.building.buildingId){\n                    return <div className=\"card mx-auto margin-top-25 my-card shadow\" key={index}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Building {index+1}</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{building.building.street} {building.building.number}</h6>\n                            <div className={\"margin-top-25 margin-bottom-25\"}>\n                                <p className=\"card-text\">Building name : {building.building.buildingName}</p>\n                                <p className=\"card-text\">Building entrance : {building.building.entrance}</p>\n                                <p>President : {building.president === null ? \"No president\" : building.president.lastName + \" \" + building.president.firstName}</p>\n                                <p><i className=\"fas fa-envelope\"> </i> {building.president === null ? \"No email\" : building.president.email}</p>\n\n                            </div>\n                            {value && value.roles.includes(\"ADMIN\") ?\n\n\n                                building.president ?\n                                    <Link to={{\n                                        pathname: 'edit-president',\n                                        groupId: groupId,\n                                        presidentId: building.president.userId,\n                                        buildingId: building.building.buildingId,\n                                        presidentFirstName : building.president.firstName,\n                                        presidentLastName : building.president.lastName,\n                                        presidentPhone : building.president.phone\n                                    }}>\n                                        <button\n                                            className=\"btn btn-outline-secondary margin-right-10 margin-left-10\">Edit\n                                            President\n                                        </button>\n                                    </Link>\n                                    :\n                                    <Link to={{\n                                        pathname: 'add-president',\n                                        groupId: groupId,\n                                        buildingId: building.building.buildingId\n                                    }}>\n                                        <button className=\"btn btn-outline-secondary margin-right-10 margin-left-10\">Add\n                                            President\n                                        </button>\n                                    </Link>\n                                :\n                                null\n                            }\n\n                            {value && value.roles.includes(\"ADMIN\") &&\n                            <button className=\"btn btn-outline-danger float-right\" onClick={() => {\n                                axios.delete(`/api/delete-building/${building.building.buildingId}`, {\n                                    headers: {\n                                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                                    }\n                                })\n                                    .then(() => {\n                                        setRedirect(!redirect);\n                                    })\n                                    .catch((err) => {\n                                        console.log(err);\n                                    })\n                            }}>Remove</button>\n                            }\n                        </div>\n\n                    </div>\n                }else{\n                    return <div className=\"card mx-auto margin-top-25 card shadow\" key={index}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Building {index+1}</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{building.building.street} {building.building.number}</h6>\n                            <div className={\"margin-top-25 margin-bottom-25\"}>\n                                <p className=\"card-text\">Building name : {building.building.buildingName}</p>\n                                <p className=\"card-text\">Building entrance : {building.building.entrance}</p>\n                                <p>President : {building.president === null ? \"No president\" : building.president.lastName + \" \" + building.president.firstName}</p>\n                                <p><i className=\"fas fa-envelope\"> </i> {building.president === null ? \"No email\" : building.president.email}</p>\n\n                            </div>\n                            {value && value.roles.includes(\"ADMIN\") ?\n\n\n                                building.president ?\n                                    <Link to={{\n                                        pathname: 'edit-president',\n                                        groupId: groupId,\n                                        linkFromBuilding : true,\n                                        userId: building.president.userId,\n                                        presidentFirstName : building.president.firstName,\n                                        presidentLastName : building.president.lastName,\n                                        presidentPhone : building.president.phone\n                                    }}>\n                                        <button\n                                            className=\"btn btn-outline-secondary margin-right-10 margin-left-10\">Edit\n                                            President\n                                        </button>\n                                    </Link>\n                                    :\n                                    <Link to={{\n                                        pathname: 'add-president',\n                                        groupId: groupId,\n                                        buildingId: building.building.buildingId\n                                    }}>\n                                        <button className=\"btn btn-outline-secondary margin-right-10 margin-left-10\">Add\n                                            President\n                                        </button>\n                                    </Link>\n                                :\n                                null\n                            }\n\n                            {value && value.roles.includes(\"ADMIN\") &&\n                            <button className=\"btn btn-outline-danger float-right\" onClick={() => {\n                                axios.delete(`/api/delete-building/${building.building.buildingId}`, {\n                                    headers: {\n                                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                                    }\n                                })\n                                    .then(() => {\n                                        setRedirect(!redirect);\n                                    })\n                            }}>Remove</button>\n                            }\n                        </div>\n\n                    </div>\n                }\n\n            })}\n            </div>\n        </>\n    )\n\n}\n\nexport default SeeBuildings;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddAdministrator.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditAdministrator.js",["270"],"import React, {useEffect, useState} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport SaveButton from \"../buttons/SaveButton\";\nimport axios from \"axios\";\n\n\nfunction EditAdministrator(props) {\n\n    let groupId = props.location.groupId;\n    let linkFromGroup = props.location.linkFromGroup;\n\n    let userId = props.location.userId;\n    let administratorFirstName = props.location.administratorFirstName;\n    let administratorLastName = props.location.administratorLastName;\n    let administratorPhone = props.location.administratorPhone;\n\n\n    const [redirect, setRedirect] = useState(false);\n\n    const [administrator, setAdministrator] = useState({\n        firstName : administratorFirstName,\n        lastName : administratorLastName,\n        phone : administratorPhone\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.put(`/user/edit/${userId}`, administrator, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            })\n    }\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\" >Edit Administrator</h1>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                {redirect && <Redirect to={{\n                    pathname : \"/group\",\n                    groupId : groupId\n                }} />}\n                <form action=\"\" onSubmit={handleSubmit}>\n{/*ADMINISTRATOR FIRST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\" value={administrator.firstName} name=\"firstName\"\n                               onChange={(e) => {\n                                   const s = {...administrator}\n                                   s.firstName = e.target.value;\n                                   setAdministrator(s);\n                               }}\n                        required/>\n                    </div>\n{/*ADMINISTRATOR LAST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  value={administrator.lastName} name=\"lastName\"  onChange={e => {\n                            const s = {...administrator};\n                            s.lastName = e.target.value;\n                            setAdministrator(s);\n                        }} required />\n                    </div>\n\n{/*ADMINISTRATOR PHONE*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  value={administrator.phone} name=\"phone\"  onChange={e => {\n                            const s = {...administrator};\n                            s.phone = e.target.value;\n                            setAdministrator(s);\n                        }} required />\n                    </div>\n\n                    {linkFromGroup ?\n                    <Link to={{\n                        pathname : '/group',\n                        groupId : groupId}}>\n                        <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                    </Link>\n                        :\n                        <Link to={{\n                            pathname : '/users-statistics'\n                            }}>\n                            <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                        </Link>\n                    }\n\n                    <SaveButton name={\"Update\"}/>\n\n                </form>\n\n            </div>\n        </>\n    );\n}\n\nexport default EditAdministrator;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddCensor.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditPresident.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/AddPresident.js",["271"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport SaveButton from \"../buttons/SaveButton\";\n\nfunction AddPresident(props) {\n\n    let groupId = props.location.groupId;\n    let buildingId =  props.location.buildingId;\n    const [redirect, setRedirect] = useState(false);\n\n    const [president, setPresident] = useState({\n        firstName : \"\",\n        lastName : \"\",\n        phone : \"\",\n        email : \"\",\n        buildingId : \"\",\n        groupId : \"\"\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        axios.post(`/user/add-president`, president, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            });\n\n    }\n\n    return (\n        <div>\n            <h1 className=\"d-flex justify-content-center\" >Add President</h1>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                {redirect && <Redirect to={{\n                    pathname : \"/see-buildings\",\n                    groupId : groupId\n                }} />}\n\n                <form action=\"\" onSubmit={handleSubmit}>\n{/*PRESIDENT FIRST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  name=\"firstName\"  onChange={e => {\n                            const s = {...president};\n                            s.firstName = e.target.value;\n                            s.buildingId = buildingId;\n                            s.groupId = groupId;\n                            setPresident(s);\n                        }} required placeholder=\"First Name\"/>\n                    </div>\n{/*PRESIDENT LAST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  name=\"lastName\"  onChange={e => {\n                            const s = {...president};\n                            s.lastName = e.target.value;\n                            setPresident(s);\n                        }} required placeholder=\"Last Name\"/>\n                    </div>\n\n{/*PRESIDENT PHONE*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\" name=\"phone\"  onChange={e => {\n                            const s = {...president};\n                            s.phone = e.target.value;\n                            setPresident(s);\n                        }} required placeholder=\"Phone\"/>\n                    </div>\n\n{/*PRESIDENT EMAIL*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  name=\"email\"  onChange={e => {\n                            const s = {...president};\n                            s.email = e.target.value;\n                            setPresident(s);\n                        }} required placeholder=\"Email\"/>\n                    </div>\n\n                    <Link to={{\n                        pathname : '/see-buildings',\n                        groupId : groupId}}>\n                        <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                    </Link>\n\n                    <SaveButton name={\"Add\"}/>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default AddPresident;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/addMembers/EditCensor.js",["272"],"import React, {useEffect, useState} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport SaveButton from \"../buttons/SaveButton\";\nimport axios from \"axios\";\n\nfunction EditCensor(props) {\n\n    let groupId = props.location.groupId;\n    let linkFromGroup = props.location.linkFromGroup;\n\n    let userId = props.location.userId;\n    let censorFirstName = props.location.censorFirstName;\n    let censorLastName = props.location.censorLastName;\n    let censorPhone = props.location.censorPhone;\n\n    const [redirect, setRedirect] = useState(false);\n\n    const [censor, setCensor] = useState({\n        firstName : censorFirstName,\n        lastName : censorLastName,\n        phone : censorPhone\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.put(`/user/edit/${userId}`, censor, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            })\n    }\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\" >Edit Censor</h1>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                {redirect && <Redirect to={{\n                    pathname : \"/group\",\n                    groupId : groupId\n                }} />}\n                <form action=\"\" onSubmit={handleSubmit}>\n{/*ADMINISTRATOR FIRST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\" value={censor.firstName} name=\"firstName\"\n                               onChange={(e) => {\n                                   const s = {...censor}\n                                   s.firstName = e.target.value;\n                                   setCensor(s);\n                               }}\n                               required/>\n                    </div>\n{/*ADMINISTRATOR LAST NAME*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  value={censor.lastName} name=\"lastName\"  onChange={e => {\n                            const s = {...censor};\n                            s.lastName = e.target.value;\n                            setCensor(s);\n                        }} required />\n                    </div>\n\n{/*ADMINISTRATOR PHONE*/}\n                    <div>\n                        <input className={\"margin-top-25\"} type=\"text\"  value={censor.phone} name=\"phone\"  onChange={e => {\n                            const s = {...censor};\n                            s.phone = e.target.value;\n                            setCensor(s);\n                        }} required />\n                    </div>\n\n                    {linkFromGroup ?\n                        <Link to={{\n                            pathname : '/group',\n                            groupId : groupId}}>\n                            <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                        </Link>\n                    :\n                        <Link to={{\n                            pathname : '/users-statistics'}}>\n                            <button className=\"btn btn-outline-danger margin-top-25\">Cancel</button>\n                        </Link>\n                    }\n\n\n                    <SaveButton name={\"Update\"}/>\n\n                </form>\n\n            </div>\n        </>\n    );\n}\n\nexport default EditCensor;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/AdminUserStatistics.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeUsers.js",["273","274","275","276","277","278"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {cities} from \"../util/cities\";\n\nfunction SeeUsers(props) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [userList, setUserList] = useState([]);\n    const [townDropdownHidden, setTownDropdownHidden] = useState(true);\n\n    useEffect(() => {\n        axios.get(`/user/all-by-role/USER`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setUserList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n    const handleTownChange = (e) => {\n        axios.get(`/user/all-by-town/${e.target.value}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setUserList(response.data)\n            })\n    }\n\n    const resetSearch = (e) => {\n        e.preventDefault();\n        axios.get(`/user/all`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setUserList(response.data);\n            })\n    }\n\n    return (\n        <div>\n            <h1 className=\"d-flex justify-content-center\">Users</h1>\n\n            <div className=\"d-flex justify-content-center\">\n                <button type=\"button\" className=\"btn btn-outline-info\" onClick={(e) => {\n                    e.preventDefault();\n                    setTownDropdownHidden(!townDropdownHidden);\n                }}>Advanced Search</button>\n            </div>\n\n            <div className=\"d-flex justify-content-center\">\n                <div style={{\"width\" : \"200px\"}} hidden={townDropdownHidden}>\n                    <select className=\"custom-select margin-top-25\" id=\"inputGroupSelect01\" onChange={handleTownChange} required>\n                        <option value=\"\" selected>Choose town...</option>\n                        {cities.sort().map((city, index) => {\n                            return <option key={index} value={city}>{city}</option>\n                        })}\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <button type=\"button\" className=\"btn btn-outline-info btn-sm\" hidden={townDropdownHidden} onClick={(e) => {\n                    e.preventDefault();\n                    setTownDropdownHidden(!townDropdownHidden);\n                    resetSearch(e);\n                }}>Reset search</button>\n            </div>\n\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <table>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Street</th>\n                        <th scope=\"col\">Number</th>\n                        <th scope=\"col\">Building name</th>\n                        <th scope=\"col\">Building Entrance</th>\n                        <th scope=\"col\">Town</th>\n                        <th scope=\"col\">Country</th>\n                        <th scope=\"col\">Roles</th>\n                        <th scope=\"col\">Remove</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n            {userList.map((user, index) => {\n                if(user.roles.length === 1){\n                    return <tr key={index}>\n                        <td>{user.userId}</td>\n                        <td>{user.firstName}</td>\n                        <td>{user.lastName}</td>\n                        <td>{user.phone}</td>\n                        <td>{user.email}</td>\n                        <td>{user.buildingStreet}</td>\n                        <td>{user.buildingNumber}</td>\n                        <td>{user.buildingName}</td>\n                        <td>{user.buildingEntrance}</td>\n                        <td>{user.town}</td>\n                        <td>{user.country}</td>\n                        <td>{user.roles}</td>\n                        {!user.roles.includes(\"ADMIN\") ?\n                            <td><button type=\"button\" className=\"btn  btn-outline-danger btn-sm\">Remove</button></td>\n                            :\n                            null\n                        }\n                    </tr>\n                }\n            })}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination\">\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n                        <li className=\"page-item active\">\n                            <a className=\"page-link\" href=\"#\">2 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default SeeUsers;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeAdministrators.js",["279","280","281","282","283"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction SeeAdministrators(props) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [administratorsList, setAdministratorsList] = useState([]);\n\n    useEffect(() => {\n        axios.get(`/user/all-by-role/ADMINISTRATOR`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setAdministratorsList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n\n    return (\n        <div>\n\n            <h1 className=\"d-flex justify-content-center\">Administrators</h1>\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <table>\n                    <thead style={{\"backgroundColor\" : \"#8db9e2\"}}>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Update profile</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {administratorsList.map((administrator, index) => {\n                    return <tr key={index}>\n                        <td>{administrator.userId}</td>\n                        <td>{administrator.firstName}</td>\n                        <td>{administrator.lastName}</td>\n                        <td>{administrator.phone}</td>\n                        <td>{administrator.email}</td>\n                        <td>\n                            <Link to={{\n                                pathname : \"/edit-administrator\",\n                                userId : administrator.userId,\n                                administratorFirstName : administrator.firstName,\n                                administratorLastName : administrator.lastName,\n                                administratorPhone : administrator.phone\n                            }}>\n                            <button type=\"button\" className=\"btn  btn-outline-success btn-sm\" >Edit</button>\n                            </Link>\n                        </td>\n                    </tr>\n                    })}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination\">\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n                        <li className=\"page-item active\">\n                            <a className=\"page-link\" href=\"#\">2 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default SeeAdministrators;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeeCensors.js",["284","285","286","287","288"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nfunction SeeCensors(props) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [censorList, setCensorList] = useState([]);\n\n    useEffect(() => {\n        axios.get(`/user/all-by-role/CENSOR`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setCensorList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n    return (\n        <div>\n\n            <h1 className=\"d-flex justify-content-center\">Censors</h1>\n\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <table>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Update profile</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {censorList.map((censor, index) => {\n                        return <tr key={index}>\n                            <td>{censor.userId}</td>\n                            <td>{censor.firstName}</td>\n                            <td>{censor.lastName}</td>\n                            <td>{censor.phone}</td>\n                            <td>{censor.email}</td>\n                            <td>\n                                <Link to={{\n                                    pathname : \"/edit-censor\",\n                                    userId : censor.userId,\n                                    censorFirstName : censor.firstName,\n                                    censorLastName : censor.lastName,\n                                    censorPhone : censor.phone,\n                                    censorId : censor.id\n                                }}>\n                                    <button type=\"button\" className=\"btn  btn-outline-success btn-sm\" >Edit</button>\n                                </Link>\n                            </td>\n                        </tr>\n                    })}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination\">\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n                        <li className=\"page-item active\">\n                            <a className=\"page-link\" href=\"#\">2 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default SeeCensors;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/admin-statistics/SeePresidents.js",["289","290","291","292","293","294","295"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nfunction SeePresidents(props) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [presidentsList, setPresidentsList] = useState([]);\n    const [editPresident, setEditPresident] = useState(false);\n\n    useEffect(() => {\n        axios.get(`/user/all-by-role/PRESIDENT`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then(response => {\n                setPresidentsList(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n    return (\n        <div>\n\n            <h1 className=\"d-flex justify-content-center\">Presidents</h1>\n\n\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <table>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Update profile</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {presidentsList.map((president, index) => {\n                        return <tr key={index}>\n                            <td>{president.userId}</td>\n                            <td>{president.firstName}</td>\n                            <td>{president.lastName}</td>\n                            <td>{president.phone}</td>\n                            <td>{president.email}</td>\n                            <td>\n                                <Link to={{\n                                    pathname : \"/edit-president\",\n                                    presidentFirstName : president.firstName,\n                                    presidentLastName : president.lastName,\n                                    presidentPhone : president.phone,\n                                    presidentId : president.id\n                                }}>\n                                    <button type=\"button\" className=\"btn  btn-outline-success btn-sm\" >Edit</button>\n                                </Link>\n                            </td>\n                        </tr>\n                    })}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"d-flex justify-content-center margin-top-25\">\n                <nav aria-label=\"...\">\n                    <ul className=\"pagination\">\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#\" tabIndex=\"-1\">Previous</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a></li>\n                        <li className=\"page-item active\">\n                            <a className=\"page-link\" href=\"#\">2 <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default SeePresidents;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/AdministratorNavbar.js",["296","297"],"import {Link} from \"react-router-dom\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {UserContext} from \"../context/UserContext\";\nimport PendingButton from \"../user-access/PendingButton\";\n\nfunction AdministratorNavbar(props) {\n\n    const value = useContext(UserContext);\n    const [group, setGroup] = useState({});\n    const [activeOffers, setActiveOffers] = useState(0);\n\n    useEffect(() => {\n        value && !value.roles.includes(\"ADMIN\") && !value.roles.includes(\"SERVICE_PROVIDER\") &&\n        axios.get(`/group/get-by-id/${value.groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then(response => {\n                setGroup(response.data);\n            })\n\n    }, [value])\n\n\n    return (\n        <>\n{/*ADMINISTRATOR SERVICE OFFERS RECEIVED*/}\n            {value && value.roles.includes(\"ADMINISTRATOR\") &&\n            <Link to={{\n                pathname : \"/see-offers\",\n                type : \"Administrative\",\n                groupId : group.groupId}} style={{\"color\" : \"white\"}} className=\"nav-link\" >Service Offers<span style={{\"backgroundColor\" : \"white\", \"color\" : \"red\", \"padding\" : \"1.5px\", \"borderRadius\" : \"5px\"}}>3</span></Link>}\n\n{/*ADMINISTRATOR JOIN REQUESTS*/}\n            {value && value.roles.includes(\"ADMINISTRATOR\") && <PendingButton/>}\n        </>\n    );\n}\n\nexport default AdministratorNavbar;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-access/PendingButton.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/google-maps/Maps.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/properties.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/registration/RegisterLink.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-access/PendingRequestsList.js",["298","299","300","301"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from 'react-modal';\nimport axios from \"axios\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction PendingRequestsList(props) {\n\n    const value = useContext(UserContext);\n\n    const customStyles = {\n        content : {\n            top                   : '50%',\n            left                  : '50%',\n            right                 : 'auto',\n            bottom                : 'auto',\n            marginRight           : '-50%',\n            transform             : 'translate(-50%, -50%)'\n        }\n    };\n\n    const [userInModal, setUserInModal] = useState({\n        userId : \"\",\n        firstName : \"\",\n        lastName : \"\",\n        email : \"\",\n        phone : \"\",\n        buildingStreet : \"\",\n        buildingNumber : \"\",\n        buildingName : \"\",\n        buildingEntrance : \"\",\n        town : \"\",\n        country : \"\",\n        other : \"\",\n        userStatus : \"\"\n\n    })\n\n    let groupId = value.groupId;\n    let userId = value.userId;\n\n    console.log(value.groupId)\n\n    const [group, setGroup] = useState(\"\");\n\n    let subtitle;\n    const [modalIsOpen,setIsOpen] = React.useState(false);\n\n\n    function afterOpenModal() {\n        subtitle.style.color = '#000000';\n    }\n\n    function closeModal(){\n        setIsOpen(false);\n    }\n\n    const [redirect, setRedirect] = useState(true);\n    const [request, setRequest] = useState({});\n    const [pendingList, setPendingList] = useState([]);\n\n\n    useEffect(() => {\n        axios.get(`/user/pending/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then((response) => {\n                setPendingList(response.data);\n            })\n\n        axios.get(`/group/get-by-id/${groupId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then(response => {\n                setGroup(response.data);\n            })\n    }, [value, redirect]);\n\n\n    return (\n        <>\n            <h1 className=\"d-flex justify-content-center\">{group.officialName}</h1>\n\n\n            {pendingList && pendingList.map((request, index) =>{\n                return <div key={index} className=\"d-flex justify-content-center margin-top-25\">\n                            <li onClick={(e) => {\n                                setIsOpen(true);\n                                const c = {...userInModal}\n                                c.userId = request.userId;\n                                c.firstName = request.firstName;\n                                c.lastName = request.lastName;\n                                c.phone = request.phone;\n                                c.email = request.email;\n                                c.buildingStreet = request.buildingStreet;\n                                c.buildingNumber = request.buildingNumber;\n                                c.buildingName = request.buildingName;\n                                c.buildingEntrance = request.buildingEntrance;\n                                c.town = request.town;\n                                c.country = request.country;\n                                c.other = request.other;\n                                c.userStatus = request.userStatus;\n                                setUserInModal(c);\n                            }} className={\"blue-underline\"}>\n                                {request.firstName} {request.lastName} - {request.buildingStreet}, {request.buildingNumber}\n                            </li>\n                        </div>\n\n            })}\n\n            <Modal\n                isOpen={modalIsOpen}\n                ariaHideApp={false}\n                onAfterOpen={afterOpenModal}\n                onRequestClose={closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n\n                <h2 ref={_subtitle => (subtitle = _subtitle)}>User Request</h2>\n                <br/>\n                <div>First name : <i className={\"float-right\"}>{userInModal.firstName}</i></div>\n                <div>Last name : <i className={\"float-right\"}>{userInModal.lastName}</i></div>\n                <div>Email : <i className={\"float-right\"}>{userInModal.email}</i></div>\n                <div>Phone : <i className={\"float-right\"}>{userInModal.phone}</i></div>\n                <div>Building street : <i className={\"float-right\"}>{userInModal.buildingStreet}</i></div>\n                <div>Building number : <i className={\"float-right\"}>{userInModal.buildingNumber}</i></div>\n                <div>Building name : <i className={\"float-right\"}>{userInModal.buildingName}</i></div>\n                <div>Building entrance : <i className={\"float-right\"}>{userInModal.buildingEntrance}</i></div>\n                <div>Town : <i className={\"float-right\"}>{userInModal.town}</i></div>\n                <div>Country : <i className={\"float-right\"}>{userInModal.country}</i></div>\n                <div>Other : <i className={\"float-right\"}>{userInModal.other}</i></div>\n                <div>Status : <i className={\"float-right\"}>{userInModal.userStatus}</i></div>\n\n                <button className=\"btn btn-outline-success\" onClick={e => {\n                    e.preventDefault();\n\n                    axios.put(`/user/accept-request/${userInModal.userId}`, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    })\n                        .then(() => {\n                            setRedirect(!redirect)\n                        })\n                        .catch((err) => {\n                            console.log(err)\n                        });\n\n                    closeModal();\n                }}>Accept</button>\n\n                <button className=\"btn btn-outline-danger margin-left-5\" onClick={e => {\n                    e.preventDefault();\n                    axios.put(`/user/reject-request/${userInModal.userId}`, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token'),\n                        }\n                    })\n                        .then(() =>{\n                            setRedirect(!redirect)\n                        })\n                    closeModal();\n                }}>Reject</button>\n\n                <button className=\"btn btn-outline-dark float-right margin-left-5\"  onClick={closeModal}>close</button>\n\n            </Modal>\n        </>\n    );\n}\n\nexport default PendingRequestsList;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/PresidentNavbar.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/AddNewTicket.js",["302"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {departments} from \"../util/departments\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction AddNewTicket(props) {\n\n    const value = useContext(UserContext);\n    let type = props.location.type;\n    const [isLoading, setIsLoading] = useState(true);\n    const [redirect, setRedirect] = useState(false);\n    const [ticket, setTicket] = useState({\n        title : \"\",\n        buildingId : \"\",\n        groupId : \"\",\n        details : \"\",\n        actionTaken : \"\",\n        department : \"\",\n        type : \"\",\n        street : \"\",\n        number : \"\",\n        town : \"\"\n\n    });\n\n    useEffect(() => {\n        axios.get(`/building/${value.buildingId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then((response) => {\n                const s = {...ticket}\n                s.street = response.data.street;\n                s.number = response.data.number;\n                s.town = response.data.town;\n                setTicket(s);\n                setIsLoading(false);\n            })\n    }, [isLoading])\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.post(`/ticket/add`, ticket, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then(() => {\n                setRedirect(true);\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <>\n            <div className=\"d-flex justify-content-center\">\n\n                {value.roles.includes(\"PRESIDENT\") &&  redirect &&\n                    <Redirect to={{\n                        pathname : \"/see-offers\",\n                        buildingId : value.buildingId,\n                        type : type\n                    }} />\n                }\n\n                {value.roles.includes(\"USER\") &&  redirect &&\n                <Redirect to={{\n                    pathname : \"/see-offers\",\n                    buildingId : value.buildingId,\n                    type : type\n                }} />\n                }\n\n\n                <form action=\"\" onSubmit={handleSubmit}>\n                    {value.roles.includes(\"USER\") ?\n                        <h1>Add Personal Ticket</h1>\n                        :\n                        <h1>Add Building Ticket</h1>\n                    }\n\n{/*DEPARTMENT*/}\n                    <div className=\"input-group mb-3 margin-top-25\">\n\n                        <select className=\"custom-select\" id=\"inputGroupSelect01\" required value={ticket.department} onChange={e =>{\n                            const s = {...ticket};\n                            value.roles.includes(\"USER\") ?\n                                s.type = \"Personal\"\n                                :\n                                s.type = \"Administrative\";\n\n                            s.department = e.target.value;\n                            s.buildingId = value.buildingId;\n                            s.groupId = value.groupId;\n                            setTicket(s);\n                        }}>\n                            <option value=\"\" selected>Select department...</option>\n                            {departments.map((department, index) => {\n                                return <option key={index} value={department}>{department}</option>\n                            })}\n                        </select>\n                    </div>\n{/*TITLE*/}\n                    <div>\n                        <input className={\"poll-input\"} type=\"text\" name=\"title\" value={ticket.title} required placeholder=\"Title\"\n                               onChange={e => {\n                                   const s = {...ticket};\n                                   s.title = e.target.value;\n                                   setTicket(s);\n                               }}/>\n                    </div>\n{/*DETAILS*/}\n                    <div>\n                <textarea className={\"poll-input\"}  name=\"details\" value={ticket.details} required placeholder=\"Details\"\n                          onChange={e => {\n                              const s = {...ticket};\n                              s.details = e.target.value;\n                              setTicket(s);\n                          }}/>\n                    </div>\n{/*ACTION TAKEN*/}\n                    <div>\n                    <textarea className={\"poll-input\"}  name=\"actionTaken\" value={ticket.actionTaken}  placeholder=\"Action Taken\"\n                              onChange={e => {\n                                  const s = {...ticket};\n                                  s.actionTaken = e.target.value;\n                                  setTicket(s);\n                              }}/>\n                    </div>\n                    <Link to={{\n                        pathname : \"/see-offers\",\n                        buildingId : value.buildingId,\n                        type : type\n                    }}>\n                        <button type=\"submit\" className=\"btn btn-outline-secondary margin-top-25 float-left\">Back</button>\n                    </Link>\n                    <button type=\"submit\" className=\"btn btn-outline-secondary margin-top-25 float-right\">Submit</button>\n\n                </form>\n            </div>\n                </>\n    );\n}\n\nexport default AddNewTicket;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/AddPoll.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/Results.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/poll/SeePolls.js",["303","304"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction SeePolls(props) {\n\n    const value = useContext(UserContext);\n\n    const [refresh, setRefresh] = useState(true);\n    const [responseList, setResponseList] = useState([]);\n    const [buttonVisibility, setButtonVisibility] = useState(true);\n    const [redirect, setRedirect] = useState(false);\n    const [reset, setReset] = useState(true);\n    const [pollToUpdate, setPollToUpdate] = useState({\n        status : \"inactive\"\n    })\n\n    useEffect(() => {\n        axios.get(`/poll/all-by-building-with-total-votes/${value.buildingId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            }\n        })\n            .then((response) => {\n                setResponseList(response.data);\n            })\n    }, [value, reset, refresh]);\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            {redirect && <Redirect to={{\n                pathname : \"/add-poll\"\n            }} />}\n            <div>\n                <h1  className=\"d-flex justify-content-center\">Polls in progress</h1>\n\n                <div className=\"d-flex justify-content-center margin-top-25 margin-bottom-25\">\n                    <button type=\"button\" className=\"btn btn-outline-info\" onClick={(e) => {\n                        e.preventDefault();\n                        setButtonVisibility(!buttonVisibility);\n                    }}>Advanced Search</button>\n                    <button type=\"button\" className=\"btn btn-outline-info margin-left-10\" onClick={(e) => {\n                        e.preventDefault();\n                        setRedirect(true);\n                    }}>Add Poll</button>\n                </div>\n\n                <div hidden={buttonVisibility}>\n                    <div className=\"d-flex justify-content-center margin-top-25 margin-bottom-25\">\n                        {/*<button type=\"button\" className=\"btn btn-success margin-right-10\" onClick={(e) => {*/}\n                        {/*    e.preventDefault();*/}\n                        {/*    setPollList([]);*/}\n                        {/*    axios.get(`/poll/get-all-filter/${value.buildingId}/active`, {*/}\n                        {/*        headers: {*/}\n                        {/*            Authorization: 'Bearer ' + localStorage.getItem('token'),*/}\n                        {/*        }*/}\n                        {/*    })*/}\n                        {/*        .then(response => {*/}\n                        {/*            setPollList(response.data)*/}\n                        {/*        })*/}\n                        {/*}}>Active</button>*/}\n                        {/*<button type=\"button\" className=\"btn btn-danger\" onClick={(e) => {*/}\n                        {/*    e.preventDefault();*/}\n                        {/*    setPollList([]);*/}\n                        {/*    axios.get(`/poll/get-all-filter/${value.buildingId}/inactive`, {*/}\n                        {/*        headers: {*/}\n                        {/*            Authorization: 'Bearer ' + localStorage.getItem('token'),*/}\n                        {/*        }*/}\n                        {/*    })*/}\n                        {/*        .then(response => {*/}\n                        {/*            setPollList(response.data);*/}\n                        {/*        })*/}\n                        {/*}}>Inactive</button>*/}\n                    </div>\n                </div>\n\n                <div className=\"d-flex justify-content-center margin-top-25 margin-bottom-25\">\n                    <button type=\"button\" className=\"btn btn-outline-info btn-sm\" hidden={buttonVisibility} onClick={(e) => {\n                        e.preventDefault();\n                        setButtonVisibility(!buttonVisibility);\n                        setReset(!reset);\n                    }}>Reset search</button>\n                </div>\n\n                <table>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Poll description</th>\n                        <th>Poll status</th>\n                        <th>Total votes</th>\n                        <th>Start date</th>\n                        <th>End date</th>\n                        <th>Close poll</th>\n                        <th>See results</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {responseList.map((response, index) => {\n                        return <tr key={index}>\n                            <td className=\"poll-index\">{index+1}</td>\n                            <td className=\"poll-description\">{response.poll && response.poll.description}</td>\n                            {response.poll && response.poll.status === \"active\" ?\n                                <td className=\"poll-status green\">{response.poll && response.poll.status}</td>\n                                :\n                                <td className=\"poll-status red\">{response.poll && response.poll.status}</td>\n                            }\n                            <td className=\"poll-vote-number\">{response.totalVotes}</td>\n                            <td>{response.poll && response.poll.startDate}</td>\n                            <td className=\"poll-end-date\">{response.poll && response.poll.endDate}</td>\n                            <td className=\"poll-close-button\">\n                                {response.poll &&\n                                response.poll.status === \"inactive\" ?\n                                    <p>Closed</p>\n                                    :\n                                    <button id={response.poll.pollId}  className=\"btn btn-outline-danger btn-sm\" onClick={(e) => {\n                                        e.preventDefault();\n                                        axios.put(`/poll/close/${response.poll.pollId}`, {\n                                            headers: {\n                                                Authorization: 'Bearer ' + localStorage.getItem('token'),\n                                            }\n                                        })\n                                            .then((response) => {\n                                                if(response.status === 200){\n                                                    setRefresh(!refresh)\n                                                }\n                                            })\n                                            .catch((err) => {\n                                                console.log(err)\n                                            })\n                                    }}>Close poll\n                                    </button>\n                                }\n                            </td>\n                            <td className=\"poll-result-button\">\n                                <Link to={{\n                                    pathname : '/see-poll-result',\n                                    pollId : response.poll.pollId,\n                                    pollDescription : response.poll.description,\n                                    buildingId : value.buildingId}}>\n                                    <button className=\"btn btn-outline-dark btn-sm\">See result</button>\n                                </Link>\n                            </td>\n\n                        </tr>\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default SeePolls;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/service.providers/ListOfServiceProviders.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/ProviderListNavbarComponent.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/navbar/ServiceProviderNavbar.js",["305","306","307"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport {UserContext} from \"../context/UserContext\";\n\nfunction ServiceProviderNavbar(props) {\n\n    const value = useContext(UserContext);\n\n    return (\n        <>\n            {value && value.roles.includes(\"SERVICE_PROVIDER\") ?\n                <Link className=\"nav-link\" style={{\"color\": \"white\", \"cursor\": \"pointer\"}} to={\"/see-tickets\"}>See All Tickets</Link>\n                :\n                null}\n\n            {value && value.roles.includes(\"SERVICE_PROVIDER\") ?\n                <Link className=\"nav-link\" style={{\"color\": \"white\", \"cursor\": \"pointer\"}} to={\"/my-tickets\"}>My Tickets (5)</Link>\n                :\n                null}\n\n        </>\n    );\n}\n\nexport default ServiceProviderNavbar;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets.provider.view/SeePendingTickets.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/offers/OfferDetails.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/SeeAssignedServiceOfferDetails.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/AverageStarRating.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/service.providers/ReviewDetails.js",["308"],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/util/StarRating.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/MyBuilding.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/Polls.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/user-view/Vote.js",["309"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {UserContext} from \"../context/UserContext\";\nimport {Link, Redirect} from \"react-router-dom\";\n\nfunction Vote(props) {\n\n    let pollId = props.location.pollId;\n    let buildingId = props.location.buildingId;\n    const value = useContext(UserContext);\n    const [isLoading, setIsLoading] = useState(true);\n    const [poll, setPoll] = useState({});\n    const [redirect, setRedirect] = useState(false);\n\n    const [userVote, setUserVote] = useState({\n        pollId : \"\",\n        answerOption : \"\",\n        userId : \"\",\n        date : Date.now()\n    })\n\n    useEffect(() => {\n        axios.get(`/poll/${pollId}`, {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n            .then((response) => {\n                setPoll(response.data);\n                setIsLoading(false);\n            })\n    }, [isLoading]);\n\n    return (\n        <>\n            {redirect && <Redirect to={{\n                pathname : \"/polls\",\n                buildingId : buildingId\n            }} />}\n\n            <div className=\"d-flex justify-content-center\" >\n                <form action=\"\">\n                    <div style={{\"marginTop\" : \"30px\", \"backgroundColor\" : \"#ccd7e0\", \"paddingLeft\" : \"75px\", \"paddingRight\" : \"75px\", \"paddingTop\" : \"25px\", \"paddingBottom\" : \"25px\", \"borderRadius\" : \"10px\"}}>\n                        <h4 className=\"d-flex justify-content-center margin-bottom-25\" style={{\"fontFamily\" : \"'Source Serif Pro', serif\"}}>{poll.description}</h4>\n\n                        {poll.option1 &&\n                        <div>\n                            <input type=\"radio\" id={poll.option1} name=\"drone\" value={poll.option1}\n                                   onChange={(e) => {\n                                       const s = {...userVote}\n                                       s.answerOption = \"option1\";\n                                       s.pollId = pollId;\n                                       s.userId = value.userId;\n                                       setUserVote(s);\n                                   }}/>\n                            <label htmlFor=\"huey\">{poll.option1}</label>\n                        </div>}\n\n                        {poll.option2 &&\n                        <div>\n                            <input type=\"radio\" id={poll.option2} name=\"drone\" value={poll.option2}\n                                   onChange={(e) => {\n                                       const s = {...userVote}\n                                       s.answerOption = \"option2\";\n                                       s.pollId = pollId;\n                                       s.userId = value.userId;\n                                       setUserVote(s);\n                                   }}\n                            />\n                            <label htmlFor=\"huey\">{poll.option2}</label>\n                        </div>}\n\n                        {poll.option3 &&\n                        <div>\n                            <input type=\"radio\" id={poll.option3} name=\"drone\" value={poll.option3}\n                                   onChange={(e) => {\n                                       const s = {...userVote}\n                                       s.answerOption = \"option3\";\n                                       s.pollId = pollId;\n                                       s.userId = value.userId;\n                                       setUserVote(s);\n                                   }}\n                            />\n                            <label htmlFor=\"huey\">{poll.option3}</label>\n                        </div>}\n\n                        {poll.option4 &&\n                        <div>\n                            <input type=\"radio\" id={poll.option4} name=\"drone\" value={poll.option4}\n                                   onChange={(e) => {\n                                       const s = {...userVote}\n                                       s.answerOption = \"option4\";\n                                       s.pollId = pollId;\n                                       s.userId = value.userId;\n                                       setUserVote(s);\n                                   }}\n                            />\n                            <label htmlFor=\"huey\">{poll.option4}</label>\n                        </div>}\n\n                        {poll.option5 &&\n                        <div>\n                            <input type=\"radio\" id={poll.option5} name=\"drone\" value={poll.option5}\n                                   onChange={(e) => {\n                                       const s = {...userVote}\n                                       s.answerOption = \"option5\";\n                                       s.pollId = pollId;\n                                       s.userId = value.userId;\n                                       setUserVote(s);\n                                   }}\n                            />\n                            <label htmlFor=\"huey\">{poll.option5}</label>\n                        </div>}\n                        <div className=\"d-flex justify-content-center\">\n                            <button type=\"submit\" className=\"btn btn-outline-success btn-sm margin-top-25\" onClick={(e) => {\n                                e.preventDefault();\n                                axios.post(`/vote/`, userVote, {\n                                    headers: {\n                                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                                    }\n                                })\n                                    .then(() => {\n                                        setRedirect(true);\n                                    })\n                            }}>Vote\n                            </button>\n                        </div>\n                    </div>\n\n                    <div className=\"d-flex justify-content-center margin-top-25\">\n                        <Link to={{\n                            pathname : '/polls',\n                            buildingId : buildingId}}>\n                            <button className=\"btn btn-outline-dark margin-bottom-25\">Back</button>\n                        </Link>\n                    </div>\n\n                </form>\n\n            </div>\n\n        </>\n    );\n}\n\nexport default Vote;","/home/alex/Desktop/projects/eadmin-frontend-microservices/src/tickets/TicketsAdministratorAndPersonalView.js",[],"/home/alex/Desktop/projects/eadmin-frontend-microservices/src/contact/Contact.js",["310"],"import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction Contact(props) {\n\n\n\n    return (\n        <div className=\"card mx-auto card shadow\" style={{\"width\": \"350px\", \"marginTop\" : \"100px\"}}>\n            <div>\n                <img className=\"card-img-top\" src={`/images/alex.jpg`} alt={\"Mucenic Alexandru\"} style={{\"width\" : \"90%\", \"height\" : \"90%\", \"marginLeft\" : \"17px\", \"marginTop\" : \"10px\"}}/>\n            </div>\n            <div className=\"card-body\">\n                <h1 className=\"card-title center-text margin-bottom-25\">Mucenic Alexandru</h1>\n                <p className=\"card-text\"><i className=\"fas fa-envelope\"> </i> mucenic.alexandru@yahoo.com</p>\n                <p className=\"card-text\"><i className=\"fas fa-phone\"> </i> 0721 786 593</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Contact;",{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","severity":1,"message":"316","line":10,"column":13,"nodeType":"317","endLine":10,"endColumn":198},{"ruleId":"318","severity":1,"message":"319","line":28,"column":12,"nodeType":"320","messageId":"321","endLine":28,"endColumn":22},{"ruleId":"318","severity":1,"message":"322","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":13},{"ruleId":"318","severity":1,"message":"323","line":9,"column":12,"nodeType":"320","messageId":"321","endLine":9,"endColumn":17},{"ruleId":"324","severity":1,"message":"325","line":35,"column":8,"nodeType":"326","endLine":35,"endColumn":17,"suggestions":"327"},{"ruleId":"318","severity":1,"message":"328","line":3,"column":15,"nodeType":"320","messageId":"321","endLine":3,"endColumn":23},{"ruleId":"318","severity":1,"message":"329","line":1,"column":16,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"329","line":1,"column":16,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"329","line":1,"column":16,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"330","severity":1,"message":"331","line":97,"column":41,"nodeType":"332","messageId":"333","endLine":97,"endColumn":43},{"ruleId":"334","severity":1,"message":"335","line":127,"column":29,"nodeType":"317","endLine":127,"endColumn":77},{"ruleId":"334","severity":1,"message":"335","line":129,"column":51,"nodeType":"317","endLine":129,"endColumn":85},{"ruleId":"334","severity":1,"message":"335","line":131,"column":29,"nodeType":"317","endLine":131,"endColumn":63},{"ruleId":"334","severity":1,"message":"335","line":133,"column":51,"nodeType":"317","endLine":133,"endColumn":85},{"ruleId":"334","severity":1,"message":"335","line":135,"column":29,"nodeType":"317","endLine":135,"endColumn":63},{"ruleId":"334","severity":1,"message":"335","line":68,"column":29,"nodeType":"317","endLine":68,"endColumn":77},{"ruleId":"334","severity":1,"message":"335","line":70,"column":51,"nodeType":"317","endLine":70,"endColumn":85},{"ruleId":"334","severity":1,"message":"335","line":72,"column":29,"nodeType":"317","endLine":72,"endColumn":63},{"ruleId":"334","severity":1,"message":"335","line":74,"column":51,"nodeType":"317","endLine":74,"endColumn":85},{"ruleId":"334","severity":1,"message":"335","line":76,"column":29,"nodeType":"317","endLine":76,"endColumn":63},{"ruleId":"334","severity":1,"message":"335","line":69,"column":29,"nodeType":"317","endLine":69,"endColumn":77},{"ruleId":"334","severity":1,"message":"335","line":71,"column":51,"nodeType":"317","endLine":71,"endColumn":85},{"ruleId":"334","severity":1,"message":"335","line":73,"column":29,"nodeType":"317","endLine":73,"endColumn":63},{"ruleId":"334","severity":1,"message":"335","line":75,"column":51,"nodeType":"317","endLine":75,"endColumn":85},{"ruleId":"334","severity":1,"message":"335","line":77,"column":29,"nodeType":"317","endLine":77,"endColumn":63},{"ruleId":"318","severity":1,"message":"336","line":9,"column":12,"nodeType":"320","messageId":"321","endLine":9,"endColumn":25},{"ruleId":"318","severity":1,"message":"337","line":9,"column":27,"nodeType":"320","messageId":"321","endLine":9,"endColumn":43},{"ruleId":"334","severity":1,"message":"335","line":69,"column":29,"nodeType":"317","endLine":69,"endColumn":77},{"ruleId":"334","severity":1,"message":"335","line":71,"column":51,"nodeType":"317","endLine":71,"endColumn":85},{"ruleId":"334","severity":1,"message":"335","line":73,"column":29,"nodeType":"317","endLine":73,"endColumn":63},{"ruleId":"334","severity":1,"message":"335","line":75,"column":51,"nodeType":"317","endLine":75,"endColumn":85},{"ruleId":"334","severity":1,"message":"335","line":77,"column":29,"nodeType":"317","endLine":77,"endColumn":63},{"ruleId":"318","severity":1,"message":"338","line":11,"column":12,"nodeType":"320","messageId":"321","endLine":11,"endColumn":24},{"ruleId":"318","severity":1,"message":"339","line":11,"column":26,"nodeType":"320","messageId":"321","endLine":11,"endColumn":41},{"ruleId":"318","severity":1,"message":"340","line":39,"column":9,"nodeType":"320","messageId":"321","endLine":39,"endColumn":15},{"ruleId":"318","severity":1,"message":"341","line":58,"column":12,"nodeType":"320","messageId":"321","endLine":58,"endColumn":19},{"ruleId":"318","severity":1,"message":"342","line":58,"column":21,"nodeType":"320","messageId":"321","endLine":58,"endColumn":31},{"ruleId":"324","severity":1,"message":"343","line":80,"column":8,"nodeType":"326","endLine":80,"endColumn":25,"suggestions":"344"},{"ruleId":"324","severity":1,"message":"345","line":41,"column":8,"nodeType":"326","endLine":41,"endColumn":19,"suggestions":"346"},{"ruleId":"318","severity":1,"message":"347","line":15,"column":12,"nodeType":"320","messageId":"321","endLine":15,"endColumn":24},{"ruleId":"318","severity":1,"message":"348","line":15,"column":26,"nodeType":"320","messageId":"321","endLine":15,"endColumn":41},{"ruleId":"318","severity":1,"message":"329","line":1,"column":28,"nodeType":"320","messageId":"321","endLine":1,"endColumn":37},{"ruleId":"318","severity":1,"message":"349","line":1,"column":39,"nodeType":"320","messageId":"321","endLine":1,"endColumn":47},{"ruleId":"318","severity":1,"message":"350","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":13},{"ruleId":"324","severity":1,"message":"351","line":40,"column":8,"nodeType":"326","endLine":40,"endColumn":19,"suggestions":"352"},{"ruleId":"324","severity":1,"message":"353","line":32,"column":8,"nodeType":"326","endLine":32,"endColumn":19,"suggestions":"354"},{"ruleId":"318","severity":1,"message":"355","line":2,"column":9,"nodeType":"320","messageId":"321","endLine":2,"endColumn":13},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'buildingId' is assigned a value but never used.","Identifier","unusedVar","'Login' is defined but never used.","'group' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'building'. Either include it or remove the dependency array.","ArrayExpression",["358"],"'Redirect' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'editPresident' is assigned a value but never used.","'setEditPresident' is assigned a value but never used.","'activeOffers' is assigned a value but never used.","'setActiveOffers' is assigned a value but never used.","'userId' is assigned a value but never used.","'request' is assigned a value but never used.","'setRequest' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'groupId'. Either include it or remove the dependency array.",["359"],"React Hook useEffect has missing dependencies: 'ticket' and 'value.buildingId'. Either include them or remove the dependency array.",["360"],"'pollToUpdate' is assigned a value but never used.","'setPollToUpdate' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'providerId'. Either include it or remove the dependency array.",["361"],"React Hook useEffect has a missing dependency: 'pollId'. Either include it or remove the dependency array.",["362"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [building, groupId]",{"range":"373","text":"374"},"Update the dependencies array to be: [value, redirect, groupId]",{"range":"375","text":"376"},"Update the dependencies array to be: [isLoading, ticket, value.buildingId]",{"range":"377","text":"378"},"Update the dependencies array to be: [isLoading, providerId]",{"range":"379","text":"380"},"Update the dependencies array to be: [isLoading, pollId]",{"range":"381","text":"382"},[1048,1057],"[building, groupId]",[2049,2066],"[value, redirect, groupId]",[1231,1242],"[isLoading, ticket, value.buildingId]",[1336,1347],"[isLoading, providerId]",[961,972],"[isLoading, pollId]"]